{"version":3,"sources":["Components/burger-ingredients/burger-ingredients.module.css","Components/ingredients-list/ingredients-list.module.css","Components/ingredients-section/ingredients-section.module.css","Components/ingredients-tabs/ingredients-tabs.module.css","Components/optional-components-list/optional-components-list.module.css","Components/constructor-total/constructor-total.module.css","Components/opened-order-details/opened-order-details.module.css","Components/nav-item/nav-item.tsx","Components/app-header/app-header.tsx","Components/modal/modal.tsx","Components/modal-overlay/modal-overlay.tsx","services/hooks.ts","Components/order-details/order-details.tsx","utils/constants.ts","utils/cookie-utils.ts","services/actions/index.ts","services/auth-api.ts","services/actions/auth.ts","Components/common-message/common-message.tsx","pages/login.tsx","pages/register.tsx","pages/forgot-password.tsx","pages/reset-password.tsx","Components/profile-form/profile-form.tsx","Components/logout-form/logout-form.tsx","utils/order-service.ts","Components/orders-ingredients/order-ingredients.tsx","Components/order-status/order-status.tsx","Components/order-card/order-card.tsx","Components/orders-list/orders-list.tsx","services/actions/wsActions.ts","Components/order-history/order-history.tsx","pages/profile.tsx","Components/ingredient-details/ingredient-details.tsx","pages/ingredient.tsx","pages/not-found.tsx","Components/opened-order-details/opened-order-details.tsx","pages/order.tsx","Components/anonim-route/anonim-route.tsx","Components/protected-route/protected-route.tsx","Components/ingredients-list-item/ingredients-list-item.tsx","Components/ingredients-section/ingredients-section.tsx","Components/ingredients-list/ingredients-list.tsx","Components/ingredients-tabs/ingredients-tabs.tsx","Components/burger-ingredients/burger-ingredients.tsx","Components/constructor-el-wrapper/constructor-el-wrapper.tsx","Components/optional-components-list/optional-components-list.tsx","Components/constructor-total/constructor-total.tsx","Components/bun-element/bun-element.tsx","Components/burger-constructor/burger-constructor.tsx","Components/main/main.tsx","Components/orders-statistic/orders-statistic.tsx","pages/orders-feed.tsx","Components/switch-wrapper/switch-wrapper.tsx","Components/app/app.tsx","reportWebVitals.ts","services/reducers/ingredients.ts","services/reducers/auth.ts","services/reducers/wsReducer.ts","services/reducers/index.ts","services/middlewares/socketMiddleware.ts","services/store.ts","index.tsx","Components/orders-statistic/orders-statistic.module.css","Components/constructor-el-wrapper/constructor-el-wrapper.module.css","Components/orders-ingredients/order-ingredients.module.css","Components/app-header/app-header.module.css","Components/modal/modal-content.module.css","pages/login.module.css","Components/ingredients-list-item/ingredients-list-item.module.css","Components/nav-item/nav-item.module.css","Components/profile-form/profile-form.module.css","Components/order-card/order-card.module.css","Components/burger-constructor/burger-constructor.module.css","Components/modal-overlay/modal.module.css","Components/orders-list/orders-list.module.css","Components/ingredient-details/ingredient-details.module.css","Components/main/main.module.css"],"names":["module","exports","NavItem","title","to","currentRoute","useLocation","pathname","activeNav","startsWith","Child","iconType","activeStatus","styles","unselected","type","className","link","AppHeader","nav","navContainer","logo","ModalContent","children","hideCloseButton","closeHandler","onClick","e","stopPropagation","wrap","modal","modalHeadTitle","modalHeadWithClose","modalRoot","document","getElementById","ModalOverlay","listener","React","useCallback","event","key","useEffect","addEventListener","removeEventListener","ReactDOM","createPortal","overlay","useDispatch","dispatchHook","useSelector","selectorHook","OrderDetails","number","state","ingredients","orderNumber","orderFailed","orderRequest","orderFailedMessage","orderUrl","authUrl","wsUrl","getCookie","name","matches","cookie","match","RegExp","replace","decodeURIComponent","setCookie","value","updatedCookie","encodeURIComponent","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","ADD_COMPONENT","REMOVE_COMPONENT","SHOW_ORDER_MODAL","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAILED","CLEAN_CONSTRUCTOR","UPDATE_OPTIONAL","UPDATE_CURRENT_TAB","GET_ORDER_REQUEST","GET_ORDER_SUCCESS","GET_ORDER_FAILED","getOrder","id","dispatch","fetch","method","headers","then","res","ok","json","err","Promise","reject","data","success","order","orders","catch","message","loginRequest","form","a","mode","body","JSON","stringify","registerRequest","forgotPasswordRequest","resetPasswordRequest","getUserRequest","token","cache","credentials","Authorization","redirect","referrerPolicy","updateUserRequest","console","log","refreshTockenRequest","localStorage","getItem","logoutRequest","SET_USER","SET_CHANGING_PASSWORD","USER_REQUIRED","USER_LOADED","SHOW_MESSAGE","SET_MESSAGE","singIn","request","accessToken","split","setItem","refreshToken","user","getUser","updateTocken","callback","undefined","singOut","finally","removeItem","CommonMessage","authMessage","auth","LoginPage","useState","email","password","setValue","onChange","target","loginHandler","preventDefault","formContainer","onSubmit","size","placeholder","RegisterPage","history","useHistory","registerHandler","push","ForgotPasswordPage","changingPassword","forgotPassword","ResetPasswordPage","code","resetHandler","resetPassword","ProfileForm","updateUser","buttonContainer","LogoutForm","getFormatedDate","dateString","date","Date","month","getMonth","day","getDate","moment","format","weekDay","getDay","delta","relativeDay","formatIngredientsList","ids","forEach","ing","ingIndex","findIndex","item","_id","ing1","find","qty","getTotal","reduce","total","price","OrderIngredients","orderIngredients","ingredientsList","length","displayIngredients","slice","footer","imgsList","rest","map","index","style","zIndex","imgContainer","notLast","alt","src","image_mobile","OrderStatus","orderStatus","ready","status","OrderCard","showStatus","location","createdAt","trueIngredientsList","filter","background","mainContainer","header","OrdersList","ordersList","WS_COMMON_ORDERS_CONNECTION_START","WS_USER_ORDERS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSE","WS_CONNECTION_CLOSED","WS_GET_COMMON_ORDERS","WS_GET_USER_ORDERS","UserOrderHistory","ws","wsConnected","error","userOrders","ProfilePage","descObject","info","logout","desc","categoty","setCategory","params","useParams","category","main","autoFit","navColumn","pointer","contentSection","path","exact","component","UserOrdersHostory","IngredientDetails","currentIngredient","isIngredientsLoading","ingredientsRequest","ingredientsLoadFailed","ingredientsFailed","image","composition","calories","proteins","fat","carbohydrates","IngredientPage","center","NotFound404","OpenedOrderDetails","openedOrder","openOrderRequest","openOrderFailed","openOrderFailedMessage","incomeOrder","container","fullWidth","list","ingredientContainer","ingredientText","quantity","OrderPage","AnonimRoute","userLoaded","render","from","ProtectedRoute","init","IngredientsListItem","useDrag","collect","monitor","opacity","isDragging","dragRef","ref","general","preventPointerEvent","count","IngredientsSection","useInView","threshold","inView","entry","ratio","intersectionRatio","IngredientsList","tabs","sectionList","useMemo","arr","tab","i","IngredientsTabs","current","s","active","BurgerIngredients","section","ConstructorElementWrapper","moveCard","isLocked","optional","burgerComponents","useRef","useDrop","accept","handlerId","getHandlerId","hover","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","drag","onDrop","wrapper","data-handler-id","hidden","text","thumbnail","handleClose","indexOf","OptionalComponentsList","dragCard","update","$splice","ConstructorTotal","bun","Ids","createOrder","BunElement","BurgerConstructor","isHover","isOver","dropTarger","onHover","Main","DndProvider","backend","HTML5Backend","OrdersStatistic","statistics","totalToday","readyOrders","inProgressOrders","statisticsGrid","OrdersFeed","commonOrders","ordersFeedSection","ordersCards","ordersStatistics","SwitchWrapper","action","goBack","CurrentIngredientDetails","CurrentOpenedOrderDetails","App","showOrderModal","showMessage","closeOrderHandler","closeCommonMessageHandler","currentOrderModal","currentCommonMessage","items","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","currentTab","currentOrder","rootReducer","combineReducers","currentItem","payload","socketMiddleware","wsActions","store","socket","next","wsInit","wsOpened","wsClose","wsClosed","wsError","wsMessage","close","WebSocket","onopen","onerror","onmessage","parsedData","parse","restParsedData","onclose","wasClean","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","actions","commonOrdersWsActions","userOrdersWsActions","enhancer","applyMiddleware","thunk","createStore","StrictMode"],"mappings":"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","file":"static/js/main.fc0e9e4b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"burger-ingredients_section__1nTGD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ingredients-list_list__3JTo7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section-list\":\"ingredients-section_section-list__3i-_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"ingredients-tabs_tabs__3LA3n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"optional-components-list_list__1LXbp\",\"dragIcon\":\"optional-components-list_dragIcon__3dY66\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"constructor-total_wrap__3hk5m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"opened-order-details_container__15qgS\",\"imgContainer\":\"opened-order-details_imgContainer__1HBd6\",\"center\":\"opened-order-details_center__3ketV\",\"ingredientContainer\":\"opened-order-details_ingredientContainer__2IDHp\",\"fullWidth\":\"opened-order-details_fullWidth__19ViG\",\"ingredientText\":\"opened-order-details_ingredientText__EU6_s\",\"quantity\":\"opened-order-details_quantity__m4Rhg\",\"list\":\"opened-order-details_list__1usRw\"};","import { Link } from 'react-router-dom';\r\nimport styles from './nav-item.module.css';\r\nimport { BurgerIcon, ListIcon, ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { FC } from 'react';\r\n\r\ntype TProps = {\r\n    title: string,\r\n    to: string\r\n}\r\n\r\nexport const NavItem: FC<TProps> = ({ title, to }) => {\r\n    const location = useLocation();\r\n    const currentRoute = location.pathname;\r\n\r\n    const activeNav = (to === '/' && to === currentRoute) || (to !== '/' && currentRoute.startsWith(to));\r\n\r\n    let Child = {};\r\n    const iconType = activeNav ? 'primary' : 'secondary';\r\n\r\n    const activeStatus = !activeNav && styles.unselected;\r\n\r\n    switch (title) {\r\n        case \"Конструктор\":\r\n            Child = <BurgerIcon type={iconType} />\r\n            break;\r\n        case \"Личный кабинет\":\r\n            Child = <ProfileIcon type={iconType} />\r\n            break;\r\n        case \"Лента заказов\":\r\n            Child = <ListIcon type={iconType} />\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <Link to={to} className={`${styles.link} text text_type_main-default mt-4 ml-4`} >\r\n            {Child}\r\n            <span className={`text text_type_main-default ${activeStatus}`}>{title}</span>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default NavItem\r\n","import React from 'react';\r\nimport styles from './app-header.module.css';\r\nimport { Logo } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport NavItem from '../nav-item/nav-item';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nexport default function AppHeader() {\r\n \r\n    return (\r\n        <header >\r\n            <nav className={styles.nav}>\r\n                <div className={styles.navContainer}>\r\n                    <NavItem title=\"Конструктор\" to=\"/\" />\r\n                    <NavItem title=\"Лента заказов\" to=\"/feed\" />\r\n                </div>\r\n                <div className={styles.logo}>\r\n                <Link to=\"/\">\r\n                    <Logo />\r\n                </Link>\r\n                </div>\r\n                <div className={styles.navContainer}>\r\n                    <NavItem title=\"Личный кабинет\" to=\"/profile\" />\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n","import styles from './modal-content.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { FC } from 'react';\r\n\r\ntype TPros = {\r\n    title?: string,\r\n    closeHandler?: () => void,\r\n    hideCloseButton?: boolean\r\n}\r\n\r\nexport const ModalContent: FC<TPros> = ({ title, children, hideCloseButton, closeHandler }) => {\r\n    return (\r\n        <div onClick={e => e.stopPropagation()} className={styles.wrap}>\r\n            <div className={styles.modal + ' pr-10 pl-10 pt-10 pb-15'}>\r\n                <div className={hideCloseButton ? styles.modalHeadTitle : styles.modalHeadWithClose}>\r\n                    <span className=\"text text_type_main-medium \">{title}</span>\r\n                    {hideCloseButton ?\r\n                        null :\r\n                        <>\r\n                            <CloseIcon onClick={closeHandler} type=\"primary\" />\r\n                        </>}\r\n                </div>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ModalContent;","import React, { FC } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport styles from './modal.module.css';\r\nimport Modal from '../modal/modal';\r\n\r\n\r\nconst modalRoot = document.getElementById(\"react-modals\") as Element;\r\ntype TPros = {\r\n    title?: string,\r\n    closeHandler: (event?: React.MouseEvent<HTMLElement>) => void,\r\n    hideCloseButton?: boolean\r\n}\r\n\r\nexport const ModalOverlay: FC<TPros> = ({ title, children, closeHandler, hideCloseButton }) => {\r\n\r\n    const listener = React.useCallback((event) => {\r\n        const key = event.key;\r\n        if (key === \"Escape\") {\r\n            closeHandler(event);\r\n        }\r\n    }, [closeHandler]);\r\n\r\n    React.useEffect(() => {\r\n        document.addEventListener('keydown', listener);\r\n        return () => {\r\n            document.removeEventListener('keydown', listener);\r\n        }\r\n    })\r\n\r\n    return ReactDOM.createPortal((\r\n        <div className={styles.overlay} onClick={closeHandler}>\r\n            <Modal title={title} children={children} closeHandler={closeHandler} hideCloseButton={hideCloseButton} />\r\n        </div>\r\n    ), modalRoot)\r\n}\r\n\r\nexport default ModalOverlay;\r\n","import {\r\n    TypedUseSelectorHook,\r\n    useDispatch as dispatchHook,\r\n    useSelector as selectorHook\r\n} from 'react-redux';\r\nimport { ActionCreator } from 'redux';\r\nimport { AppDispatch, RootState, AppThunk } from './types';\r\n\r\nexport const useDispatch = () => dispatchHook<AppDispatch | ActionCreator<AppThunk>>();\r\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;","import { CheckMarkIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { FC } from 'react';\r\nimport { useSelector } from '../../services/hooks';\r\n\r\nexport const OrderDetails: FC<{}> = () => {\r\n\r\n    const number = useSelector(state => state.ingredients.orderNumber);\r\n    const orderFailed = useSelector(state => state.ingredients.orderFailed);\r\n    const orderRequest = useSelector(state => state.ingredients.orderRequest);\r\n    const orderFailedMessage = useSelector(state => state.ingredients.orderFailedMessage)\r\n\r\n    return (\r\n        <>\r\n            {orderRequest ?\r\n                <>\r\n                    <p className=\"text text_type_main-medium pt-8 pb-15\">Обработка заказа...</p>\r\n                </> : orderFailed ?\r\n                    <>\r\n                        <p className=\"text text_type_main-medium pt-8 pb-15\">Произошла ошибка</p>\r\n                        <p className=\"text text_type_main-default pt-15 pb-2\">{orderFailedMessage}</p>\r\n                    </> :\r\n                    <>\r\n                        <p className=\"text text_type_digits-large\">{number}</p>\r\n                        <p className=\"text text_type_main-medium pt-8 pb-15\">Индетификатор заказа</p>\r\n                        <CheckMarkIcon type=\"primary\" />\r\n                        <p className=\"text text_type_main-default pt-15 pb-2\">Ваш заказ начали готовить</p>\r\n                        <p className=\"text text_type_main-default text_color_inactive\">Дождитесь готовности на орбитальной станции</p>\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderDetails;\r\n","export const mainUrl = 'https://norma.nomoreparties.space/api/ingredients';\r\n\r\nexport const orderUrl = 'https://norma.nomoreparties.space/api/orders';\r\n\r\nexport const authUrl = 'https://norma.nomoreparties.space/api';\r\n\r\nexport const wsUrl = 'wss://norma.nomoreparties.space/orders';","export function getCookie(name: string) {\r\n  const matches = document.cookie.match(\r\n    new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\r\n  );\r\n  if (matches) {\r\n    let out = decodeURIComponent(matches[1])\r\n    return out;\r\n  }\r\n  return undefined;\r\n}\r\n\r\nexport function setCookie(name: string, value: string | number | boolean) {\r\n  value = encodeURIComponent(value);\r\n  let updatedCookie = name + '=' + value;\r\n  document.cookie = updatedCookie;\r\n}\r\n\r\nexport function deleteCookie(name: string) {\r\n  setCookie(name, \"\");\r\n}\r\n","import { mainUrl, orderUrl } from '../../utils/constants';\r\nimport { data } from '../../utils/data';\r\nimport { getCookie } from '../../utils/cookie-utils';\r\nimport { TIngredient, TCreatedOrder, TOrder } from '../types/data';\r\nimport { AppDispatch, AppThunk } from '../types';\r\n\r\nexport const GET_INGREDIENTS_REQUEST: 'GET_INGREDIENTS_REQUEST' = 'GET_INGREDIENTS_REQUEST';\r\nexport const GET_INGREDIENTS_SUCCESS: 'GET_INGREDIENTS_SUCCESS' = 'GET_INGREDIENTS_SUCCESS';\r\nexport const GET_INGREDIENTS_FAILED: 'GET_INGREDIENTS_FAILED' = 'GET_INGREDIENTS_FAILED';\r\nexport const ADD_COMPONENT: 'ADD_COMPONENT' = 'ADD_COMPONENT';\r\nexport const REMOVE_COMPONENT: 'REMOVE_COMPONENT' = 'REMOVE_COMPONENT';\r\nexport const SHOW_ORDER_MODAL: 'SHOW_ORDER_MODAL' = 'SHOW_ORDER_MODAL';\r\nexport const CREATE_ORDER_REQUEST: 'CREATE_ORDER_REQUEST' = 'CREATE_ORDER_REQUEST';\r\nexport const CREATE_ORDER_SUCCESS: 'CREATE_ORDER_SUCCESS' = 'CREATE_ORDER_SUCCESS';\r\nexport const CREATE_ORDER_FAILED: 'CREATE_ORDER_FAILED' = 'CREATE_ORDER_FAILED';\r\nexport const CLEAN_CONSTRUCTOR: 'CLEAN_CONSTRUCTOR' = 'CLEAN_CONSTRUCTOR';\r\nexport const UPDATE_OPTIONAL: 'UPDATE_OPTIONAL' = 'UPDATE_OPTIONAL';\r\nexport const UPDATE_CURRENT_TAB: 'UPDATE_CURRENT_TAB' = 'UPDATE_CURRENT_TAB';\r\nexport const GET_ORDER_REQUEST: 'GET_ORDER_REQUEST' = 'GET_ORDER_REQUEST';\r\nexport const GET_ORDER_SUCCESS: 'GET_ORDER_SUCCESS' = 'GET_ORDER_SUCCESS';\r\nexport const GET_ORDER_FAILED: 'GET_ORDER_FAILED' = 'GET_ORDER_FAILED';\r\n\r\nexport interface IGetIngredientsRequest {\r\n  readonly type: typeof GET_INGREDIENTS_REQUEST;\r\n}\r\nexport interface IGetIngredientsSuccess {\r\n  readonly type: typeof GET_INGREDIENTS_SUCCESS;\r\n  readonly items: Array<TIngredient>\r\n}\r\nexport interface IGetIngredientsFailed {\r\n  readonly type: typeof GET_INGREDIENTS_FAILED;\r\n}\r\nexport interface IAddComponent {\r\n  readonly type: typeof ADD_COMPONENT;\r\n  readonly item: TIngredient\r\n}\r\nexport interface IRemoveComponent {\r\n  readonly type: typeof REMOVE_COMPONENT;\r\n  readonly item: TIngredient,\r\n  readonly index: number\r\n}\r\nexport interface IShowOrderModal {\r\n  readonly type: typeof SHOW_ORDER_MODAL;\r\n}\r\nexport interface ICleanConstructor {\r\n  readonly type: typeof CLEAN_CONSTRUCTOR;\r\n}\r\nexport interface ICreateOrderRequest {\r\n  readonly type: typeof CREATE_ORDER_REQUEST;\r\n}\r\nexport interface ICreateOrderSuccess {\r\n  readonly type: typeof CREATE_ORDER_SUCCESS;\r\n  readonly order: TCreatedOrder\r\n}\r\nexport interface ICreateOrderFailed {\r\n  readonly type: typeof CREATE_ORDER_FAILED;\r\n  readonly message: string\r\n}\r\nexport interface IUpdateOptional {\r\n  readonly type: typeof UPDATE_OPTIONAL;\r\n  readonly optional: Array<TIngredient>\r\n}\r\nexport interface IUpdateCurrentTab {\r\n  readonly type: typeof UPDATE_CURRENT_TAB;\r\n  readonly ratio: number,\r\n  readonly id: string\r\n}\r\nexport interface IGetOrderRequest {\r\n  readonly type: typeof GET_ORDER_REQUEST;\r\n}\r\nexport interface IGetOrderFailed {\r\n  readonly type: typeof GET_ORDER_FAILED;\r\n  readonly message: string\r\n}\r\nexport interface IGetOrderSuccess {\r\n  readonly type: typeof GET_ORDER_SUCCESS;\r\n  readonly order: TOrder\r\n}\r\nexport type TIngredientsActions = IGetIngredientsRequest | IGetIngredientsSuccess | IGetIngredientsFailed | IAddComponent | IRemoveComponent | IShowOrderModal | ICleanConstructor | ICreateOrderRequest | ICreateOrderSuccess | ICreateOrderFailed | IUpdateOptional | IUpdateCurrentTab | IGetOrderRequest | IGetOrderFailed | IGetOrderSuccess\r\n\r\nexport function getIngredients(): AppThunk {\r\n  return function (dispatch: AppDispatch) {\r\n    dispatch({\r\n      type: GET_INGREDIENTS_REQUEST\r\n    });\r\n    return fetch(mainUrl)\r\n      .then(res => {\r\n        if (res.ok)\r\n          return res.json();\r\n        return Promise.reject(res.status);\r\n      })\r\n      .then(({ data }) => \r\n        dispatch({\r\n          type: GET_INGREDIENTS_SUCCESS,\r\n          items: data\r\n        })\r\n      )\r\n      .catch(e => {\r\n        dispatch({\r\n          type: GET_INGREDIENTS_FAILED\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function createOrder(Ids: Array<string>): AppThunk {\r\n  return function (dispatch: AppDispatch) {\r\n    dispatch({\r\n      type: CREATE_ORDER_REQUEST\r\n    });\r\n    dispatch({\r\n      type: SHOW_ORDER_MODAL,\r\n    })\r\n    fetch(orderUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + getCookie('token')\r\n      },\r\n      body: JSON.stringify({ \"ingredients\": Ids })\r\n    })\r\n      .then(res => {\r\n        if (res.ok)\r\n          return res.json();\r\n        return res.json().then(res => { throw res });\r\n      })\r\n      .then(res => {\r\n        dispatch({\r\n          type: CREATE_ORDER_SUCCESS,\r\n          order: res\r\n        });\r\n        dispatch({\r\n          type: CLEAN_CONSTRUCTOR\r\n        });\r\n      })\r\n      .catch(res => {\r\n        dispatch({\r\n          type: CREATE_ORDER_FAILED,\r\n          message: res.message\r\n        });\r\n      })\r\n  }\r\n}\r\n\r\nexport function getIngredientsWhenYandexAFK(): AppThunk {\r\n  return function (dispatch: AppDispatch) {\r\n    dispatch({\r\n      type: GET_INGREDIENTS_SUCCESS,\r\n      items: data\r\n    })\r\n  }\r\n}\r\n\r\nexport function getOrder(id: string) {\r\n  return (dispatch: AppDispatch) => {\r\n    dispatch({\r\n      type: GET_ORDER_REQUEST\r\n    })\r\n    fetch(`${orderUrl}/${id}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(res => {\r\n        return res.ok ? res.json() : res.json().then(err => Promise.reject(err));\r\n      })\r\n      .then(data => {\r\n        if (data.success) {\r\n          dispatch({\r\n            type: GET_ORDER_SUCCESS,\r\n            order: data.orders[0]\r\n          });;\r\n        }\r\n      })\r\n      .catch(err => {\r\n        dispatch({\r\n          type: GET_ORDER_FAILED,\r\n          message: err.message\r\n        })\r\n      })\r\n  }\r\n}","import { getCookie } from '../utils/cookie-utils';\r\nimport { authUrl } from '../utils/constants';\r\n\r\ntype TForm = {\r\n  [key: string]: number | boolean | string;\r\n}\r\n\r\nexport const loginRequest = async (form: TForm) => {\r\n  return await fetch(`${authUrl}/auth/login`, {\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(form)\r\n  });\r\n};\r\n\r\nexport const registerRequest = async (form: TForm) => {\r\n  return await fetch(`${authUrl}/auth/register`, {\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(form)\r\n  });\r\n}\r\n\r\nexport const forgotPasswordRequest = async (form: TForm) => {\r\n  return await fetch(`${authUrl}/password-reset`, {\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(form)\r\n  });\r\n}\r\nexport const resetPasswordRequest = async (form: TForm) => {\r\n  return await fetch(`${authUrl}/password-reset/reset`, {\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(form)\r\n  });\r\n}\r\n\r\nexport const getUserRequest = async () => {\r\n  const token = getCookie('token');\r\n  return await fetch(`${authUrl}/auth/user`, {\r\n    method: 'GET',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: 'Bearer ' + token\r\n    },\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer'\r\n  });\r\n}\r\n\r\nexport const updateUserRequest = async (form: TForm) => {\r\n  console.log(JSON.stringify(form))\r\n  return await fetch(`${authUrl}/auth/user`, {\r\n    method: 'PATCH',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: 'Bearer ' + getCookie('token')\r\n    },\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n    body: JSON.stringify(form)\r\n  });\r\n}\r\n\r\n\r\n\r\nexport const refreshTockenRequest = async () =>\r\n  await fetch(`${authUrl}/auth/token`, {\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n    body: JSON.stringify({ token: localStorage.getItem('token') })\r\n  });\r\n\r\nexport const logoutRequest = async () => {\r\n  return await fetch(`${authUrl}/auth/logout`, {\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n    body: JSON.stringify({ token: localStorage.getItem('token') })\r\n  });\r\n};\r\n\r\n","import { loginRequest, registerRequest, forgotPasswordRequest, getUserRequest, logoutRequest, refreshTockenRequest, resetPasswordRequest, updateUserRequest } from '../auth-api';\r\nimport { setCookie, deleteCookie } from '../../utils/cookie-utils';\r\nimport { TUser, TForm } from '../types/data';\r\n//import {authUrl} from '../../utils/constants';\r\nimport { AppDispatch, AppThunk } from '../types';\r\nimport { ActionCreator } from 'redux';\r\n\r\nexport const SET_USER: 'SET_USER' = 'SET_USER';\r\nexport const SET_CHANGING_PASSWORD: 'SET_CHANGING_PASSWORD' = 'SET_CHANGING_PASSWORD';\r\nexport const USER_REQUIRED: 'USER_REQUIRED' = 'USER_REQUIRED';\r\nexport const USER_LOADED: 'USER_LOADED' = 'USER_LOADED';\r\nexport const SHOW_MESSAGE: 'SHOW_MESSAGE' = 'SHOW_MESSAGE';\r\nexport const SET_MESSAGE: 'SET_MESSAGE' = 'SET_MESSAGE';\r\n\r\nexport interface ISetUser {\r\n    readonly type: typeof SET_USER;\r\n    readonly user?: TUser\r\n}\r\nexport interface ISetChangePassword {\r\n    readonly type: typeof SET_CHANGING_PASSWORD;\r\n}\r\nexport interface IUserRequired {\r\n    readonly type: typeof USER_REQUIRED;\r\n}\r\nexport interface IUserLoaded {\r\n    readonly type: typeof USER_LOADED;\r\n}\r\nexport interface IShowMessage {\r\n    readonly type: typeof SHOW_MESSAGE;\r\n    readonly message: string;\r\n}\r\nexport interface ISetMessage {\r\n    readonly type: typeof SET_MESSAGE;\r\n    readonly message: string;\r\n}\r\n\r\nexport type TAuthActions = ISetUser | ISetChangePassword | IUserRequired | IUserRequired | IUserLoaded | IShowMessage | ISetMessage\r\n\r\nexport function singIn(form: TForm, type: string): AppThunk {\r\n    return async function (dispatch: AppDispatch) {\r\n        const request = type === 'login' ? loginRequest : registerRequest;\r\n        return request(form)\r\n            .then(res => {\r\n                return res.ok ? res.json() : res.json().then(err => Promise.reject(err));\r\n            })\r\n            .then(data => {\r\n                if (data.success) {\r\n                    const authToken = data.accessToken.split(\"Bearer \")[1];\r\n\r\n                    setCookie('token', authToken);\r\n\r\n                    localStorage.setItem('token', data.refreshToken);\r\n\r\n                    return dispatch({\r\n                        type: SET_USER,\r\n                        user: data.user,\r\n                    });\r\n                }\r\n            })\r\n            .catch(res => {\r\n                dispatch({\r\n                    type: SHOW_MESSAGE,\r\n                    message: res.message\r\n                });\r\n            })\r\n    }\r\n}\r\n\r\nexport function forgotPassword(form: TForm): AppThunk {\r\n    return function (dispatch: AppDispatch) {\r\n        forgotPasswordRequest(form)\r\n            .then(res => {\r\n                return res.ok ? res.json() : res.json().then(err => Promise.reject(err));\r\n            })\r\n            .then(data => {\r\n                if (data.success) {\r\n                    return dispatch({\r\n                        type: SET_CHANGING_PASSWORD\r\n                    });;\r\n                }\r\n            })\r\n            .catch(res => {\r\n                dispatch({\r\n                    type: SHOW_MESSAGE,\r\n                    message: res.message\r\n                });\r\n            })\r\n    }\r\n}\r\n\r\nexport function resetPassword(form: TForm): AppThunk {\r\n    return function (dispatch: AppDispatch) {\r\n        resetPasswordRequest(form)\r\n            .then(res => {\r\n                return res.ok ? res.json() : res.json().then(err => Promise.reject(err));\r\n            })\r\n            .then(data => {\r\n                if (data.success) {\r\n                    dispatch({\r\n                        type: SET_CHANGING_PASSWORD\r\n                    });;\r\n                }\r\n            })\r\n            .catch(res => {\r\n                dispatch({\r\n                    type: SHOW_MESSAGE,\r\n                    message: res.message\r\n                });\r\n            })\r\n    }\r\n}\r\n\r\nexport function getUser(): AppThunk {\r\n    return function (dispatch: AppDispatch | ActionCreator<AppThunk>) {\r\n        dispatch({\r\n            type: USER_REQUIRED\r\n        })\r\n        return getUserRequest()\r\n            .then(res => {\r\n                return res.ok ? res.json() : res.json().then(err => Promise.reject(err));\r\n            })\r\n            .then(data => {\r\n\r\n                if (data.success) {\r\n                    dispatch({\r\n                        type: SET_USER,\r\n                        user: data.user,\r\n                    });\r\n                    dispatch({\r\n                        type: USER_LOADED\r\n                    })\r\n                } else Promise.reject(data);\r\n            })\r\n            .catch(res => {\r\n                if (res.message === 'jwt expired') {\r\n                  return dispatch(updateTocken(getUser()));\r\n                } else {\r\n                    dispatch({\r\n                        type: USER_LOADED\r\n                    })\r\n                    //console.error(res.message);\r\n                }\r\n\r\n            })\r\n    }\r\n};\r\n\r\nconst updateTocken = (callback: Function) => {\r\n    return function (dispatch: AppDispatch | ActionCreator<AppThunk>) {\r\n       return refreshTockenRequest()\r\n            .then(res => {\r\n                return res.ok ? res.json() : res.json().then(err => Promise.reject(err));\r\n            })\r\n            .then(data => {\r\n                console.log(data)\r\n                if (data.success) {\r\n                    const authToken = data.accessToken.split(\"Bearer \")[1];\r\n                    setCookie('token', authToken);\r\n                    localStorage.setItem('token', data.refreshToken);\r\n                    return dispatch(callback);\r\n                } else Promise.reject(data)\r\n            })\r\n            .catch((res) => {\r\n                dispatch({\r\n                    type: SET_USER,\r\n                    user: undefined,\r\n                });\r\n                dispatch({\r\n                    type: USER_LOADED\r\n                });\r\n                //dispatch(showMessage(\"Ошибка: \" + res.message));\r\n            })\r\n    }\r\n}\r\n\r\nexport function updateUser(form: TForm): AppThunk {\r\n    return function (dispatch: AppDispatch) {\r\n        updateUserRequest(form)\r\n            .then(res => {\r\n                return res.ok ? res.json() : res.json().then(err => Promise.reject(err));\r\n            })\r\n            .then(data => {\r\n                dispatch({\r\n                    type: SET_USER,\r\n                    user: data.user,\r\n                });\r\n                dispatch({\r\n                    type: SHOW_MESSAGE,\r\n                    message: \"Данные пользователя изменены\"\r\n                });\r\n            })\r\n            .catch((res) => {\r\n                dispatch({\r\n                    type: SHOW_MESSAGE,\r\n                    message: res.message\r\n                });\r\n            })\r\n    }\r\n}\r\n\r\nexport function singOut(): AppThunk {\r\n    return function (dispatch: AppDispatch) {\r\n        logoutRequest()\r\n            .then(res => {\r\n                return res.ok ? res.json() : res.json().then(err => Promise.reject(err));\r\n            })\r\n            .catch((res) => {\r\n                dispatch({\r\n                    type: SHOW_MESSAGE,\r\n                    message: res.message\r\n                });\r\n            })\r\n            .finally(() => {\r\n                dispatch({\r\n                    type: SET_USER,\r\n                    user: undefined,\r\n                });\r\n                deleteCookie('token');\r\n                localStorage.removeItem('token');\r\n            })\r\n    }\r\n}","import { useSelector } from \"../../services/hooks\";\r\n\r\nexport default function CommonMessage() {\r\n    const authMessage = useSelector(state => state.auth.authMessage);\r\n    return (\r\n        <p className=\"text text_type_main-default pt-15 pb-2\">{authMessage}</p>\r\n    )\r\n\r\n}","import styles from './login.module.css';\r\nimport { Input, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useState, useCallback, ChangeEvent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { singIn } from '../services/actions/auth';\r\nimport { useDispatch } from '../services/hooks';\r\n\r\nexport default function LoginPage() {\r\n    const [form, setValue] = useState({ email: '', password: '' });\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue({ ...form, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const loginHandler = useCallback((e) => {\r\n        e.preventDefault();\r\n        dispatch(singIn(form, 'login'));\r\n\r\n    }, [dispatch, form])\r\n\r\n    return (\r\n        <div className={styles.formContainer}>\r\n            <form className={styles.form + ' pb-20'} onSubmit={loginHandler}>\r\n                <h2 className=\"text text_type_main-medium\">Вход</h2>\r\n                <Input\r\n                    type={'text'}\r\n                    size={'default'}\r\n                    value={form.email}\r\n                    name={'email'}\r\n                    placeholder={'e-mail'}\r\n                    onChange={onChange} />\r\n                <PasswordInput\r\n                    onChange={onChange}\r\n                    value={form.password}\r\n                    name={'password'} />\r\n                <Button type=\"primary\" size=\"medium\">Войти</Button>\r\n            </form>\r\n            <p className=\"text text_type_main-default\">Вы - новый пользователь? <Link className={styles.link} to={'/register'}>Зарегистрироваться</Link></p>\r\n            <p className=\"text text_type_main-default\"> Забыли пароль? <Link className={styles.link} to={'/forgot-password'}>Восстановить</Link></p>\r\n        </div>\r\n    )\r\n}","import styles from './login.module.css';\r\nimport { Input, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useState, useCallback, ChangeEvent } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { singIn } from '../services/actions/auth';\r\nimport { useDispatch } from '../services/hooks';\r\n\r\nexport default function RegisterPage() {\r\n    const [form, setValue] = useState({ name: '', email: '', password: '' });\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue({ ...form, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const registerHandler = useCallback((e) => {\r\n        e.preventDefault();\r\n        dispatch(singIn(form, 'register'));\r\n        history.push('/');\r\n    }, [dispatch, form])\r\n\r\n    return (\r\n        <div className={styles.formContainer}>\r\n            <form className={styles.form + ' pb-20'} onSubmit={registerHandler}>\r\n                <h2 className=\"text text_type_main-medium\">Регистрация</h2>\r\n                <Input\r\n                    type={'text'}\r\n                    size={'default'}\r\n                    value={form.name}\r\n                    name={'name'}\r\n                    placeholder={'Имя'}\r\n                    onChange={onChange} />\r\n                <Input\r\n                    type={'text'}\r\n                    size={'default'}\r\n                    value={form.email}\r\n                    name={'email'}\r\n                    placeholder={'e-mail'}\r\n                    onChange={onChange} />\r\n                <PasswordInput\r\n                    onChange={onChange}\r\n                    value={form.password}\r\n                    name={'password'} />\r\n                <Button type=\"primary\" size=\"medium\">Зарегистрироваться</Button>\r\n            </form>\r\n            <p className=\"text text_type_main-default\">Вы уже зарегистрированы? <Link className={styles.link} to={'/login'}>Войти</Link></p>\r\n        </div>\r\n    )\r\n}","import styles from './login.module.css';\r\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { ChangeEvent, FormEvent, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { forgotPassword } from '../services/actions/auth';\r\nimport { useDispatch, useSelector } from '../services/hooks';\r\n\r\nexport const ForgotPasswordPage = () => {\r\n\r\n    const user = useSelector(state => state.auth.user);\r\n\r\n    const [form, setValue] = useState({ email: '' });\r\n    const changingPassword = useSelector(state => state.auth.changingPassword);\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue({ ...form, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const forgotPasswordHandler = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        dispatch(forgotPassword(form));\r\n    }\r\n\r\n    if (user) return <Redirect to={'/'} />\r\n\r\n    return (\r\n        <div className={styles.formContainer}>\r\n            {!changingPassword &&\r\n                <form className={styles.form + ' pb-20'} onSubmit={forgotPasswordHandler}>\r\n                    <h2 className=\"text text_type_main-medium\">Восстановление пароля</h2>\r\n                    <Input\r\n                        type={'text'}\r\n                        size={'default'}\r\n                        value={form.email}\r\n                        name={'email'}\r\n                        placeholder={'Укажите e-mail'}\r\n                        onChange={onChange} />\r\n                    <Button type=\"primary\" size=\"medium\">Восстановить</Button>\r\n                </form>}\r\n            {changingPassword &&\r\n                <Link className=\"mb-10\" to={'/reset-password'}><Button type=\"primary\" size=\"medium\">Далее</Button></Link>\r\n            }\r\n            <p className=\"text text_type_main-default\">Вспомнили пароль? <Link className={styles.link} to={'/login'}>Войти</Link></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPasswordPage;","import styles from './login.module.css';\r\nimport { Input, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useState, useCallback, ChangeEvent } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from '../services/hooks';\r\nimport { resetPassword } from '../services/actions/auth';\r\n\r\nexport default function ResetPasswordPage() {\r\n    const [form, setValue] = useState({ password: '', code: '', });\r\n    const dispatch = useDispatch();\r\n    const changingPassword = useSelector(state => state.auth.changingPassword);\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue({ ...form, [e.target.name]: e.target.value });\r\n    };\r\n    const resetHandler = useCallback((e) => {\r\n        e.preventDefault();\r\n        dispatch(resetPassword(form));\r\n    }, [dispatch, form])\r\n    return (\r\n        <> {changingPassword ? <div className={styles.formContainer}>\r\n            <form className={styles.form + ' pb-20'} onSubmit={resetHandler}>\r\n                <h2 className=\"text text_type_main-medium\">Восстановление пароля</h2>\r\n                <PasswordInput\r\n                    onChange={onChange}\r\n                    value={form.password}\r\n                    name={'password'} />\r\n                <Input\r\n                    type={'text'}\r\n                    size={'default'}\r\n                    value={form.code}\r\n                    name={'code'}\r\n                    placeholder={'Введите код из письма'}\r\n                    onChange={onChange} />\r\n                <Button type=\"primary\" size=\"medium\">Сохранить</Button>\r\n            </form>\r\n            <p className=\"text text_type_main-default\">Вспомнили пароль?<Link className={styles.link} to={'/login'}>Войти</Link></p>\r\n        </div> : <Redirect to={{ pathname: '/forgot-password' }} />}\r\n        </>\r\n    )\r\n}","import { Input, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { ChangeEvent, FormEvent, useState } from 'react';\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { updateUser } from '../../services/actions/auth';\r\nimport { useEffect } from 'react';\r\nimport styles from './profile-form.module.css';\r\nimport { TUser } from '../../services/types/data';\r\n\r\n\r\nexport default function ProfileForm() {\r\n    const incomeUser = useSelector(state => state.auth.user);\r\n    const user = incomeUser as TUser;\r\n\r\n    const [form, setValue] = useState({ email: '', password: '', name: '' });\r\n    const dispatch = useDispatch();\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue({ ...form, [e.target.name]: e.target.value });\r\n    };\r\n    function updateUserHandler(e: FormEvent) {\r\n        e.preventDefault();\r\n        dispatch(updateUser(form))\r\n    }\r\n    useEffect(() => {\r\n        setValue({ email: user.email, password: '', name: user.name })\r\n    }, [user])\r\n\r\n    function revertHandler() {\r\n        //e.preventDefault();\r\n        setValue({ email: user.email, password: '', name: user.name })\r\n    }\r\n    return (\r\n        <form className={styles.form + ' pb-20'} onSubmit={updateUserHandler}>\r\n            <Input\r\n                type={'text'}\r\n                size={'default'}\r\n                value={form.name}\r\n                name={'name'}\r\n                placeholder={'Имя'}\r\n                onChange={onChange} />\r\n            <Input\r\n                type={'text'}\r\n                size={'default'}\r\n                value={form.email}\r\n                name={'email'}\r\n                placeholder={'e-mail'}\r\n                onChange={onChange} />\r\n            <PasswordInput\r\n                onChange={onChange}\r\n                value={form.password}\r\n                name={'password'} />\r\n            <div className={styles.buttonContainer}>\r\n                <Button type=\"primary\" size=\"medium\">Сохранить</Button>\r\n                <Button onClick={revertHandler} type=\"primary\" size=\"medium\">Отмена</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}","import { Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useDispatch } from '../../services/hooks';\r\nimport { singOut } from '../../services/actions/auth';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FC } from 'react';\r\n\r\nexport const LogoutForm: FC<{}> = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const logoutHandler = () => {\r\n        dispatch(singOut());\r\n        history.push('/');\r\n    }\r\n    return(\r\n        <div>\r\n            <Button onClick={logoutHandler} type=\"primary\" size=\"medium\">Выйти</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoutForm;","import moment from 'moment';\r\nimport { TIngredient } from '../services/types/data';\r\n\r\nexport function getFormatedDate(dateString: string) {\r\n    const date = new Date(dateString);\r\n    const month = date.getMonth();\r\n    const day = date.getDate();\r\n    if (month < (new Date()).getMonth() || (new Date()).getDate() - day > 7) {\r\n        return moment(date).format(\"DD/MM/YYYY HH:mm [i-GMT]Z\")\r\n    }\r\n    const weekDay = date.getDay();\r\n    let delta = (new Date()).getDay() - weekDay;\r\n    delta = delta >= 0 ? delta : delta + 7;\r\n    let relativeDay = \"\"\r\n    switch (true) {\r\n        case delta === 1:\r\n            relativeDay = 'Вчера';\r\n            break;\r\n        case delta === 0:\r\n            relativeDay = 'Сегодня'\r\n            break;\r\n        case delta > 1 && delta < 5:\r\n            relativeDay = delta + ' дня назад'\r\n            break;\r\n        default:\r\n            relativeDay = delta + ' дней назад'\r\n            break;\r\n    }\r\n    return relativeDay + moment(date).format(\", HH:mm [i-GMT]Z\")\r\n}\r\n\r\nexport function formatIngredientsList(ids: string[], ingredients: Array<TIngredient>) {\r\n    const res: Array<TIngredient> = [];\r\n    ids.forEach(ing => {\r\n        let ingIndex = res.findIndex(item => item._id === ing);\r\n        if (ingIndex === -1) {\r\n            const ing1 = ingredients.find(item => item._id === ing) as TIngredient;\r\n            res.push({ ...ing1, qty: 1 });\r\n        } else {\r\n            const ing1 = res[ingIndex] as TIngredient;\r\n            if (ing1.qty)\r\n                ing1.qty++\r\n        }\r\n    });\r\n    return res;\r\n}\r\n\r\nexport function getTotal(ingredients: Array<TIngredient>) {\r\n    return ingredients.reduce((total, item) => item.qty ? total + item.price * item.qty : total, 0);\r\n}\r\n\r\n","import styles from './order-ingredients.module.css';\r\nimport { useSelector } from '../../services/hooks';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { formatIngredientsList, getTotal } from '../../utils/order-service';\r\nimport { FC } from 'react';\r\n\r\nexport const OrderIngredients: FC<{ orderIngredients: Array<string> }> = ({ orderIngredients }) => {\r\n    const displayQuantity = 6;\r\n    const ingredientsList = useSelector(state => state.ingredients.ingredients);\r\n    if (ingredientsList.length === 0) {\r\n        return <p className=\"text text_type_main-default\">Загрузка ингредиентов</p>;\r\n    }\r\n    const ingredients = formatIngredientsList(orderIngredients, ingredientsList);\r\n    const displayIngredients = ingredients.length > displayQuantity ? ingredients.slice(0, displayQuantity) : ingredients\r\n    const total = getTotal(ingredients);\r\n    return (\r\n        <div className={styles.footer}>\r\n            <div className={styles.imgsList}>\r\n                {ingredients.length > displayQuantity && <span className={styles.rest + \" text text_type_digits-default\"}>+{ingredients.length - displayQuantity}</span>}\r\n\r\n                {displayIngredients.map((ing, index) =>\r\n                    <img key={ing._id + index} style={{ zIndex: index + 1 }} className={`${styles.imgContainer} ${ingredients.length > displayQuantity && index === 0 && styles.notLast}`} alt=\"img\" src={ing.image_mobile} />\r\n                )}\r\n            </div>\r\n            <div><span className=\"text text_type_digits-medium\">{total}<CurrencyIcon type=\"primary\" /></span></div>\r\n        </div>\r\n    )\r\n}\r\nexport default OrderIngredients;","import { FC } from \"react\";\r\n\r\nexport const OrderStatus: FC<{ status: string }> = ({ status }) => {\r\n    let orderStatus = \"\";\r\n    let ready = \"\";\r\n    switch (status) {\r\n        case 'done':\r\n            orderStatus = 'Выполнено';\r\n            ready = \" success-text\"\r\n            break;\r\n        default:\r\n            orderStatus = 'Готовится';\r\n            break\r\n    }\r\n    return (\r\n        <p className={\"text text_type_main-default\" + ready}>{orderStatus}</p>\r\n    )\r\n}\r\n\r\nexport default OrderStatus\r\n","import styles from './order-card.module.css';\r\nimport OrderIngredients from '../orders-ingredients/order-ingredients';\r\nimport { getFormatedDate } from '../../utils/order-service';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport OrderStatus from '../order-status/order-status';\r\nimport { FC } from 'react';\r\nimport { TOrder } from '../../services/types/data';\r\n\r\ntype TProps = {\r\n    order: TOrder,\r\n    showStatus?: boolean\r\n}\r\n\r\nexport const OrderCard: FC<TProps> = ({ order, showStatus }) => {\r\n    const location = useLocation();\r\n    const date = getFormatedDate(order.createdAt);\r\n    const trueIngredientsList = order.ingredients.filter(item => item);\r\n    return (\r\n        <Link className=\"link-drop-style\"\r\n            to={{\r\n                pathname: `${location.pathname}/${order.number}`,\r\n                state: { background: location }\r\n            }}>\r\n            <div className={styles.mainContainer + \" p-6 m-4\"}>\r\n                <div className={styles.header}>\r\n                    <p className=\"text text_type_main-medium\">#{order.number}</p>\r\n                    <p className=\"text text_type_main-default gray-text\">{date}</p>\r\n                </div>\r\n                <p className=\"text text_type_main-medium\">{order.name}</p>\r\n                {showStatus && <OrderStatus status={order.status} />}\r\n                {order.ingredients?.length === 0 || trueIngredientsList.length === 0 ? <p>В заказе нет игредиентов</p> : <OrderIngredients orderIngredients={trueIngredientsList} />}\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\nexport default OrderCard;","import styles from \"./orders-list.module.css\";\r\nimport OrderCard from '../order-card/order-card';\r\nimport { TOrder } from \"../../services/types/data\";\r\nimport { FC } from \"react\";\r\n\r\ntype TProps = {\r\n    orders: Array<TOrder>\r\n    showStatus?: boolean\r\n}\r\n\r\nexport const OrdersList: FC<TProps> = ({ orders, showStatus }) => {\r\n    return (\r\n        <>\r\n            {orders && orders.length > 0 ?\r\n                <ul className={styles.ordersList + ' scrollable'}>\r\n                    {orders.map(order =>\r\n                        <OrderCard key={order._id} order={order} showStatus={showStatus} />\r\n                    )}\r\n                </ul> :\r\n                <p className=\"text text_type_main-default\">Заказы отсутствуют</p>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrdersList;","import { TWsOrdersResponse } from \"../types/data\";\r\n\r\nexport const WS_COMMON_ORDERS_CONNECTION_START: 'WS_COMMON_ORDERS_CONNECTION_START' = 'WS_COMMON_ORDERS_CONNECTION_START';\r\nexport const WS_USER_ORDERS_CONNECTION_START: 'WS_USER_ORDERS_CONNECTION_START' = 'WS_USER_ORDERS_CONNECTION_START';\r\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\r\nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\r\nexport const WS_CONNECTION_CLOSE: 'WS_CONNECTION_CLOSE' = 'WS_CONNECTION_CLOSE';\r\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' = 'WS_CONNECTION_CLOSED';\r\nexport const WS_GET_COMMON_ORDERS: 'WS_GET_COMMON_ORDERS' = 'WS_GET_COMMON_ORDERS';\r\nexport const WS_GET_USER_ORDERS: 'WS_GET_USER_ORDERS' = 'WS_GET_USER_ORDERS';\r\n\r\nexport interface ICommonOrdersConnectionStart {\r\n    readonly type: typeof WS_COMMON_ORDERS_CONNECTION_START;\r\n}\r\nexport interface IUserOrdersConnectionStart {\r\n    readonly type: typeof WS_USER_ORDERS_CONNECTION_START;\r\n}\r\nexport interface IWsConnectionSuccess {\r\n    readonly type: typeof WS_CONNECTION_SUCCESS;\r\n}\r\nexport interface IWsConnectionFailed {\r\n    readonly type: typeof WS_CONNECTION_ERROR;\r\n    readonly error: string\r\n}\r\nexport interface IWsConnectionClosed {\r\n    readonly type: typeof WS_CONNECTION_CLOSED;\r\n    readonly code: string\r\n}\r\nexport interface IWsGetCommonOrders {\r\n    readonly type: typeof WS_GET_COMMON_ORDERS;\r\n    readonly payload: TWsOrdersResponse\r\n}\r\nexport interface IWsGetUserOrders {\r\n    readonly type: typeof WS_GET_USER_ORDERS;\r\n    readonly payload: TWsOrdersResponse\r\n}\r\nexport interface IWsConnectionClose {\r\n    readonly type: typeof WS_CONNECTION_CLOSE\r\n}\r\n\r\nexport type TWSActions = IWsGetUserOrders | IWsGetCommonOrders | IWsConnectionClosed | IWsConnectionFailed | IWsConnectionSuccess | IUserOrdersConnectionStart | ICommonOrdersConnectionStart | IWsConnectionClose\r\n\r\n","import { useDispatch, useSelector } from \"../../services/hooks\";\r\nimport OrdersList from '../orders-list/orders-list';\r\nimport { WS_USER_ORDERS_CONNECTION_START, WS_CONNECTION_CLOSE } from '../../services/actions/wsActions';\r\nimport { useEffect } from \"react\";\r\n\r\nexport const UserOrderHistory = () => {\r\n    const dispatch = useDispatch();\r\n    const { wsConnected, code, error, userOrders } = useSelector(state => state.ws);\r\n    useEffect(() => {\r\n        dispatch({ type: WS_USER_ORDERS_CONNECTION_START })\r\n        return () => {\r\n            dispatch({ type: WS_CONNECTION_CLOSE })\r\n        }\r\n    }, [dispatch])\r\n\r\n    const orders = userOrders?.orders ? userOrders.orders : [];\r\n\r\n    return (\r\n        <>\r\n            {wsConnected ? <OrdersList orders={orders} showStatus={true} />\r\n                : code || error ?\r\n                    <>\r\n                        <p className=\"text text_type_main-default\">Произошла ошибка подключения</p>\r\n                        <p className=\"text text_type_main-default\">{'код ошибки' + code}</p>\r\n                        <p className=\"text text_type_main-default\">{'сообщение: ' + error}</p>\r\n                    </>\r\n                    : <p className=\"text text_type_main-default\">Идет загрузка...</p>\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\nexport default UserOrderHistory;","import styles from './login.module.css';\r\nimport { useState, useEffect } from 'react';\r\nimport { Route, useHistory, useParams } from 'react-router-dom';\r\nimport ProfileForm from '../Components/profile-form/profile-form';\r\nimport LogoutForm from '../Components/logout-form/logout-form';\r\nimport UserOrdersHostory from '../Components/order-history/order-history';\r\n\r\nexport default function ProfilePage() {\r\n\r\n    const descObject: { [key: string]: string } = {\r\n        info: \"В этом разделе вы можете изменить свои персональные данные\",\r\n        orders: \"В этом разделе вы можете посмотреть свою историю заказов\",\r\n        logout: \"выход из профиля\"\r\n    }\r\n\r\n    const [categoty, setCategory] = useState({ name: \"info\", desc: descObject[\"info\"] })\r\n\r\n    const history = useHistory();\r\n    const params = useParams<{ category: string }>();\r\n    useEffect(() => {\r\n        if (params?.category)\r\n            setCategory({ name: params.category, desc: descObject[params.category] });\r\n\r\n    }, [params])\r\n\r\n    const onClick = (name: string) => {\r\n        const desc = descObject[name] || \"\";\r\n        setCategory({ name, desc });\r\n        history.push(`/profile/${name}`)\r\n    }\r\n\r\n    return (\r\n        <div className={`${styles.main} ${styles.autoFit} pt-30`}>\r\n            <nav className={`${styles.navColumn} mr-15`}>\r\n                <ul className={styles.navContainer}>\r\n                    <li onClick={() => onClick(\"info\")} className={`text text_type_main-large pb-3 ${categoty.name !== 'info' && styles.unselected} ${styles.pointer}`}>Профиль</li>\r\n                    <li onClick={() => onClick(\"orders\")} className={`text text_type_main-large pb-3 ${categoty.name !== 'orders' && styles.unselected} ${styles.pointer}`}>История заказов</li>\r\n                    <li onClick={() => onClick(\"logout\")} className={`text text_type_main-large pb-3 ${categoty.name !== 'logout' && styles.unselected} ${styles.pointer}`}>Выход</li>\r\n                    <p className={\"text text_type_main-default mt-20 gray-text\"}>{categoty.desc}</p>\r\n                </ul>\r\n            </nav>\r\n            <section className={styles.contentSection}>\r\n                <Route path={['/profile', `/profile/info`]} exact={true} component={ProfileForm} />\r\n                <Route path={`/profile/orders`} exact={true} component={UserOrdersHostory} />\r\n                <Route path={`/profile/logout`} exact={true} component={LogoutForm} />\r\n            </section>\r\n\r\n        </div>\r\n    )\r\n}","import styles from './ingredient-details.module.css';\r\nimport { useSelector } from '../../services/hooks';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nexport default function IngredientDetails() {\r\n    const { id } = useParams<{ id: string }>();\r\n    const currentIngredient = useSelector(state => state.ingredients.ingredients.find(item => item._id === id));\r\n    const isIngredientsLoading = useSelector(state => state.ingredients.ingredientsRequest);\r\n    const ingredientsLoadFailed = useSelector(state => state.ingredients.ingredientsFailed);\r\n\r\n    if (isIngredientsLoading) return <p>Загрузка...</p>\r\n\r\n\r\n    //const currentIngredient = useSelector(state => state.ingredients.currentIngredient);\r\n    return (\r\n        <>\r\n            {ingredientsLoadFailed ? <p>Произошла ошибка загрузки</p> :\r\n                !currentIngredient ? <p>ингредиент не найден</p> :\r\n                    <>\r\n                        <img alt={currentIngredient.name} src={currentIngredient.image} />\r\n                        <p className=\"text text_type_main-default pt-4\">{currentIngredient.name}</p>\r\n                        <div className={styles.composition + ' pt-8'}>\r\n                            <span className=\"text text_type_main-default\">Калории, ккал<br />{currentIngredient.calories}</span>\r\n                            <span className=\"text text_type_main-default\">Белки, г<br />{currentIngredient.proteins}</span>\r\n                            <span className=\"text text_type_main-default\">Жиры, г<br />{currentIngredient.fat}</span>\r\n                            <span className=\"text text_type_main-default\">Углеводы, г<br />{currentIngredient.carbohydrates}</span>\r\n                        </div>\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import IngredientDetails from '../Components/ingredient-details/ingredient-details';\r\nimport Modal from '../Components/modal/modal';\r\nimport styles from './login.module.css';\r\n\r\nexport default function IngredientPage() {\r\n\r\n    return (\r\n        <div className={styles.center}>\r\n            <Modal title=\"Детали ингредиента\" children={<IngredientDetails />} hideCloseButton={true} />\r\n        </div>\r\n    )\r\n}","import styles from './login.module.css';\r\n\r\nexport default function NotFound404() {\r\n    return (\r\n        <div className={styles.center}>\r\n            <p className=\"text text_type_main-large\">404</p>\r\n        </div>\r\n    )\r\n}","import styles from './opened-order-details.module.css';\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { getOrder } from '../../services/actions/index';\r\nimport {useParams} from 'react-router-dom';\r\nimport { FC, useEffect } from 'react';\r\nimport {formatIngredientsList, getTotal, getFormatedDate} from '../../utils/order-service';\r\nimport {CurrencyIcon} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport OrderStatus from '../order-status/order-status';\r\nimport { TIngredient, TOrder } from '../../services/types/data';\r\n\r\nexport const OpenedOrderDetails: FC<{}> = () => {\r\n    const {openOrderRequest,\r\n            openOrderFailed,\r\n            openOrderFailedMessage,\r\n            order: incomeOrder\r\n        } = useSelector(state => state.ingredients.openedOrder);\r\n    const ingredients = useSelector(state => state.ingredients.ingredients);\r\n\r\n    const order = incomeOrder as TOrder;\r\n\r\n    const {id} = useParams<{id: string}>();\r\n    const dispatch = useDispatch();\r\n    useEffect(()=> {\r\n        dispatch(getOrder(id));\r\n    },[getOrder, dispatch, id]);\r\n    if(!order) return null;\r\n    let displayIngredients: Array<TIngredient> = [];\r\n    let total = 0\r\n    if(order.ingredients) {\r\n      displayIngredients =  formatIngredientsList(order.ingredients, ingredients);\r\n      total = getTotal(displayIngredients);\r\n    }\r\n    const date = getFormatedDate(order.createdAt);\r\n    return (\r\n        <div className={styles.container}>\r\n            {openOrderRequest ? <p>Загрузка заказа</p> : openOrderFailed ? <p>Ошибка: {openOrderFailedMessage}</p> :\r\n            <>\r\n                <p className={\"text text_type_digits-medium mb-10 \" + styles.center}>#{order.number}</p>\r\n                <p className=\"text text_type_main-medium mb-3\">{order.name}</p>\r\n                <OrderStatus status={order.status} />\r\n                <p className=\"text text_type_main-medium mt-15\">Состав</p>\r\n                <ul className={styles.fullWidth + \" scrollable pr-4 mb-10 \" + styles.list}>\r\n                    {displayIngredients.length > 0 ? displayIngredients.map(item => \r\n                    <li key={item._id} className={styles.ingredientContainer+ \" mb-4\"}>\r\n                        <img className={styles.imgContainer + \" mr-4\"} alt=\"img\" src={item.image_mobile} />\r\n                        <div className={styles.fullWidth + \" \" + styles.ingredientText}>\r\n                            <span className=\"text text_type_main-default\">{item.name}</span>\r\n                            <span className={styles.quantity + \" ml-4\"}>\r\n                                <span className=\"text text_type_main-default pr-1\">{item.qty} x {item.price}  </span>\r\n                                <CurrencyIcon type=\"primary\" />\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n                    ) : <p>Ингедиенты отсутсвуют</p>}\r\n                </ul>\r\n                <div className={styles.ingredientText + \" \" + styles.fullWidth}>\r\n                    <span className=\"text text_type_main-default gray-text\">{date}</span>\r\n                    <span className={styles.quantity}>\r\n                        <span className=\"text text_type_main-default pr-1\">{total}</span>\r\n                        <CurrencyIcon type=\"primary\" />\r\n                    </span>\r\n                </div>\r\n            </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OpenedOrderDetails;","import OpenedOrderDetails from '../Components/opened-order-details/opened-order-details';\r\nimport Modal from '../Components/modal/modal';\r\nimport styles from './login.module.css';\r\n\r\nexport default function OrderPage() {\r\n    return (\r\n        <div className={styles.center}>\r\n            <Modal children={<OpenedOrderDetails />} hideCloseButton={true}/>\r\n        </div>\r\n    )\r\n}","import { Redirect, Route, RouteProps, useLocation } from 'react-router-dom';\r\nimport { useSelector } from '../../services/hooks';\r\nimport styles from '../../pages/./login.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { FC, ReactNode } from 'react';\r\n\r\n\r\ntype TPros = {\r\n    // [key: string]: number | boolean | string;\r\n    children: ReactNode,\r\n    path: string,\r\n    exact?: boolean\r\n}\r\n\r\ninterface state {\r\n    from: {\r\n        pathname: string\r\n    };\r\n}\r\n\r\nexport const AnonimRoute: FC<TPros> = ({ children, ...rest }) => {\r\n    const user = useSelector(state => state.auth.user);\r\n    const userLoaded = useSelector(state => state.auth.userLoaded);\r\n    const { state } = useLocation<state>();\r\n\r\n    if (!userLoaded) return (\r\n        <div className={styles.formContainer}>\r\n            <p className=\"text text_type_main-default\">Подождите, идет загрузка пользователя</p>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                !user ? (\r\n                    children\r\n                ) : (\r\n                    <Redirect to={state?.from ? state.from.pathname : '/'} />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default AnonimRoute;\r\n","import { Redirect, Route } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { FC, ReactNode, useEffect } from 'react';\r\nimport { getUser } from '../../services/actions/auth';\r\nimport styles from '../../pages/./login.module.css';\r\n\r\ntype TProps = {\r\n    children: ReactNode,\r\n    path: string,\r\n    exact?: boolean\r\n}\r\n\r\nexport const ProtectedRoute: FC<TProps> = ({ children, ...rest }) => {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(state => state.auth.user);\r\n    const userLoaded = useSelector(state => state.auth.userLoaded)\r\n\r\n    const init = async () => {\r\n        dispatch(getUser());\r\n    };\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n    if (!userLoaded) {\r\n        return <div className={styles.formContainer}>\r\n            <p className=\"text text_type_main-default\">Подождите, идет загрузка пользователя</p>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                user ? (\r\n                    children\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: '/login',\r\n                            state: { from: location }\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}","import React, { FC } from 'react';\r\nimport styles from './ingredients-list-item.module.css';\r\nimport { CurrencyIcon, Counter } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useDrag } from 'react-dnd';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { TIngredient } from '../../services/types/data';\r\n\r\nexport const IngredientsListItem: FC<{ item: TIngredient }> = ({ item }) => {\r\n    const { _id, name, price, image, qty } = item;\r\n\r\n    //drag\r\n    const [{ opacity }, dragRef] = useDrag({\r\n        type: 'ingredient',\r\n        item: { ...item },\r\n        collect: monitor => ({\r\n            opacity: monitor.isDragging() ? 0.5 : 1\r\n        })\r\n    })\r\n\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <Link className=\"link-drop-style\"\r\n            to={{\r\n                pathname: `/ingredients/${_id}`,\r\n                state: { background: location }\r\n            }}>\r\n            <div ref={dragRef} className={styles.general} style={{ opacity }}>\r\n                <div className={styles.info + ' pr-4 pl-4'}>\r\n                    <img className={styles.preventPointerEvent} alt={name} src={image} />\r\n                    <span className=\"text text_type_digits-default mt-1 mb-1\">\r\n                        {price}\r\n                        <CurrencyIcon type=\"primary\" />\r\n                    </span>\r\n                </div>\r\n                <span className=\"text text_type_main-default\">{name}</span>\r\n                {!!qty && <Counter count={qty} size=\"default\" />}\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\nexport default IngredientsListItem\r\n","import React, { FC } from 'react';\r\nimport styles from './ingredients-section.module.css';\r\nimport IngredientsListItem from '../ingredients-list-item/ingredients-list-item';\r\nimport { ingredientsSectionType } from '../../utils/local-types';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { UPDATE_CURRENT_TAB } from '../../services/actions';\r\nimport { TabSection } from '../../services/types/data';\r\n\r\nexport const IngredientsSection: FC<{item: TabSection}> = ({ item }) => {\r\n    const dispatch = useDispatch();\r\n    const { id, title, ingredients } = item;\r\n\r\n    const { ref, inView, entry } = useInView({\r\n        threshold: [0, 0.25, 0.5, 0.75, 1]\r\n    })\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: UPDATE_CURRENT_TAB,\r\n            id: id,\r\n            ratio: entry ? entry.intersectionRatio : 0\r\n        });\r\n    }, [inView, entry, dispatch]);\r\n\r\n\r\n    return (\r\n        <li ref={ref} className={' mt-10 pb-10'}>\r\n            <p className=\"text text_type_main-medium\">{title}</p>\r\n            <div className={styles['section-list'] + ' pt-6 pl-4 pr-4'}>\r\n                {ingredients.map(item => (<IngredientsListItem key={item._id} item={item} />))}\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default IngredientsSection;\r\n\r\n","import React, { FC } from 'react';\r\n\r\nimport styles from './ingredients-list.module.css';\r\nimport IngredientsSection from '../ingredients-section/ingredients-section';\r\n\r\nimport { TTab, TabSection } from '../../services/types/data';\r\nimport { useSelector } from '../../services/hooks';\r\n\r\ntype TProps = {\r\n    tabs: Array<TTab>\r\n}\r\n\r\nexport const IngredientsList: FC<TProps> = ({ tabs }) => {\r\n\r\n    const { ingredientsRequest, ingredients, ingredientsFailed } = useSelector(state => state.ingredients);\r\n\r\n    const sectionList = React.useMemo(() => {\r\n        let arr: TabSection[] = [];\r\n        tabs.forEach((tab, i) => {\r\n            arr.push({\r\n                id: tab.id,\r\n                title: tab.title,\r\n                ingredients: ingredients.filter(item => item.type === tab.id)\r\n            });\r\n        });\r\n        return arr;\r\n    }, [tabs, ingredients]);\r\n\r\n    return (\r\n        <>\r\n            {ingredientsRequest && 'Загрузка...'}\r\n            {ingredientsFailed && 'Произошла ошибка при загрузке ингридиентов'}\r\n            {!ingredientsRequest && !ingredientsFailed && ingredients.length &&\r\n                <ul className={styles.list + ' scrollable'}>\r\n                    {sectionList.map(item => (\r\n                        <IngredientsSection key={item.id} item={item} />\r\n                    ))}\r\n                </ul>}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default IngredientsList;\r\n","import React, { FC } from 'react';\r\nimport styles from './ingredients-tabs.module.css'\r\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport PropTypes from 'prop-types';\r\nimport { tabType } from '../../utils/local-types'\r\nimport { useSelector } from '../../services/hooks';\r\nimport { TTab } from '../../services/types/data';\r\n\r\nexport const IngredientsTabs: FC<{ tabs: Array<TTab> }> = ({ tabs }) => {\r\n    const current = useSelector(state => state.ingredients.tabs.reduce((current, tab) => {\r\n        return current.ratio < tab.ratio ? tab : current\r\n    }, state.ingredients.tabs[0]).id);\r\n    return (\r\n        <div className={styles.tabs + ' mt-5'}>\r\n            {tabs.map(({ id, title }) => (\r\n                <Tab onClick={(s: string) => { }} key={id} value={id} active={current === id}>\r\n                    {title}\r\n                </Tab>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IngredientsTabs;\r\n\r\n","import React from 'react';\r\nimport styles from './burger-ingredients.module.css'\r\nimport IngredientsList from '../ingredients-list/ingredients-list';\r\nimport IngredientsTabs from '../ingredients-tabs/ingredients-tabs';\r\nimport { useSelector } from '../../services/hooks';\r\n\r\nexport default function BurgerIngredients() {\r\n\r\n    const tabs = useSelector(state => state.ingredients.tabs)\r\n\r\n    return (\r\n        <section className={styles.section}>\r\n            <p className=\"text text_type_main-large mt-10 \">Собери бургер</p>\r\n            <IngredientsTabs tabs={tabs} />\r\n            <IngredientsList tabs={tabs} />\r\n        </section>\r\n    )\r\n}\r\n","import React, { DragEventHandler, FC } from 'react';\r\nimport styles from './constructor-el-wrapper.module.css'\r\nimport { DragIcon, ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\n\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport { REMOVE_COMPONENT } from '../../services/actions';\r\n\r\nimport { useRef } from 'react';\r\nimport { useDrag, useDrop, XYCoord } from 'react-dnd';\r\nimport { TIngredient } from '../../services/types/data';\r\n\r\ntype TProps = {\r\n    item: TIngredient,\r\n    index: number,\r\n    moveCard: Function,\r\n    type?: 'top' | 'bottom',\r\n    isLocked?: boolean\r\n}\r\n\r\nexport const ConstructorElementWrapper: FC<TProps> = ({ item, index, moveCard, type, isLocked }) => {\r\n    const id = item.id;\r\n    const dispatch = useDispatch();\r\n    const optional = useSelector(state => state.ingredients.burgerComponents.optional)\r\n\r\n    const removeComponent = () => dispatch({\r\n        type: REMOVE_COMPONENT,\r\n        item: item,\r\n        index: optional.indexOf(item)\r\n    });\r\n\r\n    const ref = useRef<HTMLDivElement>(null);\r\n    const [{ handlerId }, drop] = useDrop({\r\n        accept: 'component',\r\n        collect(monitor) {\r\n            return {\r\n                handlerId: monitor.getHandlerId()\r\n            }\r\n        },\r\n        hover(item: {index: number}, monitor) {\r\n            if (!ref.current) {\r\n                return;\r\n            }\r\n            const dragIndex = item.index;\r\n            const hoverIndex = index;\r\n            // Don't replace items with themselves\r\n            if (dragIndex === hoverIndex) {\r\n                return;\r\n            }\r\n            // Determine rectangle on screen\r\n            const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n            // Get vertical middle\r\n            const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n            // Determine mouse position\r\n            const clientOffset = monitor.getClientOffset() as XYCoord;\r\n            // Get pixels to the top\r\n            const hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n            // Only perform the move when the mouse has crossed half of the items height\r\n            // When dragging downwards, only move when the cursor is below 50%\r\n            // When dragging upwards, only move when the cursor is above 50%\r\n            // Dragging downwards\r\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n                return;\r\n            }\r\n            // Dragging upwards\r\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n                return;\r\n            }\r\n            // Time to actually perform the action\r\n            moveCard(dragIndex, hoverIndex);\r\n            // Note: we're mutating the monitor item here!\r\n            // Generally it's better to avoid mutations,\r\n            // but it's good here for the sake of performance\r\n            // to avoid expensive index searches.\r\n            item.index = hoverIndex;\r\n        }\r\n    })\r\n    const [{ isDragging }, drag] = useDrag({\r\n        type: 'component',\r\n        item: () => {\r\n            return { id, index };\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    });\r\n    const opacity = isDragging ? 0 : 1;\r\n    if (item.type !== 'bun') drag(drop(ref));\r\n    const preventDefault: DragEventHandler<HTMLDivElement> = (e) => e.preventDefault();\r\n    return (\r\n        <div ref={ref} style={{ opacity }} onDrop={preventDefault} className={styles.wrapper} data-handler-id={handlerId}>\r\n            <div className={styles.drag}>\r\n                <span hidden={isLocked}><DragIcon type=\"primary\" /></span>\r\n            </div>\r\n            <ConstructorElement\r\n                type={type}\r\n                isLocked={isLocked}\r\n                text={item.name}\r\n                price={item.price}\r\n                thumbnail={item.image_mobile}\r\n                handleClose={removeComponent}>\r\n            </ConstructorElement>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConstructorElementWrapper;\r\n","import React, { FC } from 'react';\r\nimport styles from './optional-components-list.module.css';\r\nimport ConstructorElementWrappar from '../constructor-el-wrapper/constructor-el-wrapper';\r\nimport { useCallback } from 'react';\r\nimport update from 'immutability-helper';\r\nimport { useDispatch } from 'react-redux';\r\nimport { UPDATE_OPTIONAL } from '../../services/actions'\r\nimport { TIngredient } from '../../services/types/data';\r\n\r\nexport const OptionalComponentsList: FC<{data: Array<TIngredient>}> = ({ data }) => {\r\n    const dispatch = useDispatch();\r\n    const moveCard = useCallback((dragIndex, hoverIndex) => {\r\n        const dragCard = data[dragIndex];\r\n\r\n        dispatch({\r\n            type: UPDATE_OPTIONAL,\r\n            optional: update(data, {\r\n                $splice: [\r\n                    [dragIndex, 1],\r\n                    [hoverIndex, 0, dragCard],\r\n                ],\r\n            })\r\n        })\r\n    }, [data, dispatch]);\r\n\r\n    return (\r\n        <ul className={styles.list + ' scrollable'}>{\r\n            data.map((item, index) => (\r\n                <ConstructorElementWrappar key={item.id} index={index} item={item} moveCard={moveCard} />\r\n            ))\r\n        }</ul>\r\n    )\r\n}\r\nexport default OptionalComponentsList;\r\n\r\n","import React, { FC } from 'react';\r\nimport styles from './constructor-total.module.css'\r\nimport { CurrencyIcon, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport { createOrder, CREATE_ORDER_FAILED, SHOW_ORDER_MODAL } from '../../services/actions';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport const ConstructorTotal: FC<{}> = () => {\r\n\r\n    const total = useSelector(state => state.ingredients.ingredients.reduce((total, item) => item.qty ? total + item.price * item.qty : total, 0));\r\n    const bun = useSelector(state => state.ingredients.burgerComponents.bun);\r\n    const Ids = useSelector(state => state.ingredients.ingredients\r\n        .filter(item => item.qty)\r\n        .map(item => item._id));\r\n    const user = useSelector(state => state.auth.user);\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const showOrderModal = () => {\r\n        if(!bun) {\r\n            dispatch({\r\n                type:CREATE_ORDER_FAILED,\r\n                message: \"Для оформления заказа требуется добавить булку\"\r\n            })\r\n            dispatch({type: SHOW_ORDER_MODAL});\r\n            return;\r\n        }\r\n        if(!user) {\r\n            history.push('/login');\r\n        } else {\r\n            dispatch(createOrder(Ids));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrap + ' mt-5'}>\r\n            <span className=\"text text_type_main-large\">\r\n                {total}\r\n                <CurrencyIcon type=\"primary\" />\r\n            </span>\r\n            <span className={'ml-10'}>\r\n                <Button type=\"primary\" size=\"small\" onClick={showOrderModal}>\r\n                    <span className=\"text text_type_main-default\">Оформить заказ</span>\r\n                </Button>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConstructorTotal;","import React, { FC } from 'react';\r\nimport styles from '../constructor-el-wrapper/constructor-el-wrapper.module.css'\r\nimport { DragIcon, ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { TIngredient } from '../../services/types/data';\r\n\r\ntype TProps = {\r\n    item: TIngredient,\r\n    type?: 'top' | 'bottom',\r\n    isLocked: boolean\r\n}\r\n\r\nexport const BunElement: FC<TProps> = ({ item, type, isLocked }) => {\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.drag}>\r\n                <span hidden={isLocked}><DragIcon type=\"primary\" /></span>\r\n            </div>\r\n            <ConstructorElement\r\n                type={type}\r\n                isLocked={isLocked}\r\n                text={(type === 'bottom') ? item.name + ' (низ)' : item.name + ' (верх)'}\r\n                price={item.price}\r\n                thumbnail={item.image_mobile}>\r\n            </ConstructorElement>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BunElement;\r\n\r\n","import React, { FC } from 'react';\r\nimport styles from './burger-constructor.module.css'\r\nimport OptionalComponentsList from '../optional-components-list/optional-components-list';\r\nimport ConstructorTotal from '../constructor-total/constructor-total';\r\nimport BunElement from '../bun-element/bun-element';\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { useDrop } from 'react-dnd';\r\nimport { ADD_COMPONENT } from '../../services/actions';\r\n\r\nexport const BurgerConstructor: FC<{}> = () => {\r\n    const dispatch = useDispatch();\r\n    const { bun, optional } = useSelector(state => state.ingredients.burgerComponents);\r\n\r\n    //drop\r\n    const [{ isHover }, dropTarger] = useDrop({\r\n        accept: 'ingredient',\r\n        collect: monitor => ({\r\n            isHover: monitor.isOver()\r\n        }),\r\n        drop(item) {\r\n            dispatch({\r\n                type: ADD_COMPONENT,\r\n                item: item\r\n            })\r\n        }\r\n    });\r\n\r\n    return (\r\n        <section ref={dropTarger} className={`${styles.section} p-1 mt-25 mr-4 ml-4 ${isHover ? styles.onHover : ''}`}>\r\n            {bun && <BunElement item={bun} isLocked={true} type=\"top\" key=\"topbun\" />}\r\n            <OptionalComponentsList data={optional} />\r\n            {bun && <BunElement item={bun} isLocked={true} type=\"bottom\" key=\"bottombun\" />}\r\n            <ConstructorTotal />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default BurgerConstructor;\r\n\r\n","import React from 'react';\r\nimport styles from './main.module.css'\r\nimport BurgerIngredients from '../burger-ingredients/burger-ingredients'\r\nimport BurgerConstructor from '../burger-constructor/burger-constructor'\r\nimport { DndProvider } from 'react-dnd'\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\n\r\nexport default function Main() {\r\n    return (\r\n        <main className={styles.main}>\r\n            <DndProvider backend={HTML5Backend}>\r\n                <BurgerIngredients />\r\n                <BurgerConstructor />\r\n            </DndProvider>\r\n        </main>\r\n    )\r\n}","import { FC } from 'react';\r\nimport styles from './orders-statistic.module.css';\r\n\r\ntype TProps = {\r\n    statistics: {\r\n        total: number, totalToday: number, readyOrders: Array<string>, inProgressOrders: Array<string>\r\n    }\r\n}\r\n\r\nexport const OrdersStatistic: FC<TProps> = ({ statistics }) => {\r\n    const { total, totalToday, readyOrders, inProgressOrders } = statistics;\r\n    return (\r\n        <div className={styles.statisticsGrid}>\r\n            <div className={styles.readyOrders}>\r\n                <p className=\"text text_type_main-medium\">Готовы:</p>\r\n                <ul className={styles.ordersList + ' scrollable'}>\r\n                    {readyOrders.map(item => <li key={item} className={\"text text_type_digits-medium success-text\"}>{item}</li>)}\r\n                </ul>\r\n            </div>\r\n            <div className={styles.inProgressOrders}>\r\n                <p className=\"text text_type_main-medium\">В работе:</p>\r\n                <ul className={styles.ordersList + ' scrollable'}>\r\n                    {inProgressOrders.map(item => <li key={item} className=\"text text_type_digits-medium\">{item}</li>)}\r\n                </ul></div>\r\n            <div className={styles.total}>\r\n                <p className=\"text text_type_main-medium\">Выполнено за всё время:</p>\r\n                <p className=\"text text_type_digits-large\">{total}</p>\r\n            </div>\r\n            <div className={styles.totalToday}>\r\n                <p className=\"text text_type_main-medium\">Выполнено за сегодня:</p>\r\n                <p className=\"text text_type_digits-large\">{totalToday}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrdersStatistic;","import styles from \"./login.module.css\";\r\nimport data from '../utils/orders-feed-test-data';\r\nimport { useEffect } from \"react\";\r\nimport OrdersStatistic from '../Components/orders-statistic/orders-statistic';\r\nimport { useDispatch, useSelector } from \"../services/hooks\";\r\nimport OrdersList from '../Components/orders-list/orders-list';\r\nimport { WS_COMMON_ORDERS_CONNECTION_START, WS_CONNECTION_CLOSE } from '../services/actions/wsActions';\r\n\r\nexport default function OrdersFeed() {\r\n    const dispatch = useDispatch();\r\n    const { wsConnected, code, error, commonOrders } = useSelector(state => state.ws);\r\n    const { orders, statistics } = commonOrders;\r\n    useEffect(() => {\r\n        dispatch({ type: WS_COMMON_ORDERS_CONNECTION_START })\r\n        return () => {\r\n            dispatch({ type: WS_CONNECTION_CLOSE })\r\n        }\r\n    }, [dispatch])\r\n    return (\r\n        <> {wsConnected ?\r\n            <>\r\n                <section className={styles.ordersFeedSection + \" mt-10\"}>\r\n                    <h2 className={styles.title + \" text text_type_main-large\"}>Лента заказов</h2>\r\n                    <article className={styles.ordersCards}>\r\n                        <OrdersList orders={orders} />\r\n                    </article>\r\n                    <article className={styles.ordersStatistics}>\r\n                        <OrdersStatistic statistics={statistics} />\r\n                    </article>\r\n                </section>\r\n            </> : code || error ?\r\n                <>\r\n                    <p className=\"text text_type_main-default\">Произошла ошибка подключения</p>\r\n                    <p className=\"text text_type_main-default\">{'код ошибки' + code}</p>\r\n                    <p className=\"text text_type_main-default\">{'сообщение: ' + error}</p>\r\n                </> : <p className=\"text text_type_main-default\">Идет загрузка...</p>}\r\n        </>\r\n    )\r\n}","import { Switch, Route, useLocation } from 'react-router-dom';\r\nimport {\r\n    LoginPage,\r\n    RegisterPage,\r\n    ForgotPasswordPage,\r\n    ResetPasswordPage,\r\n    ProfilePage,\r\n    IngredientPage,\r\n    OrderPage,\r\n    NotFound404\r\n} from '../../pages';\r\nimport AnonimRoute from '../anonim-route/anonim-route';\r\nimport { ProtectedRoute } from '../protected-route/protected-route';\r\nimport Main from '../main/main';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ModalOverlay from '../modal-overlay/modal-overlay';\r\nimport { FC, useCallback } from 'react';\r\nimport IngredientDetails from '../ingredient-details/ingredient-details';\r\nimport OrdersFeed from '../../pages/orders-feed';\r\nimport OpenedOrderDetails from '../opened-order-details/opened-order-details';\r\nimport * as H from 'history';\r\n\r\ninterface TLocation extends H.Location {\r\n    background?: H.Location\r\n}\r\n\r\nexport const SwitchWrapper: FC<{}> = () => {\r\n    const location = useLocation<TLocation>();\r\n    const history = useHistory();\r\n    let background = history.action === 'PUSH' ? location.state?.background : undefined;\r\n\r\n\r\n    const closeHandler = useCallback(e => {\r\n        e.stopPropagation();\r\n        history.goBack();\r\n    }, []);\r\n\r\n    const CurrentIngredientDetails = () => <ModalOverlay title=\"Детали ингредиента\" children={<IngredientDetails />} closeHandler={closeHandler} />;\r\n    const CurrentOpenedOrderDetails = () => <ModalOverlay children={<OpenedOrderDetails />} closeHandler={closeHandler} />;\r\n\r\n    return (\r\n        <>\r\n            <Switch location={background || location}>\r\n                <AnonimRoute path=\"/login\">\r\n                    <LoginPage />\r\n                </AnonimRoute>\r\n                <AnonimRoute path=\"/register\" exact={true}>\r\n                    <RegisterPage />\r\n                </AnonimRoute>\r\n                <AnonimRoute path=\"/forgot-password\">\r\n                    <ForgotPasswordPage />\r\n                </AnonimRoute>\r\n                <Route path=\"/reset-password\">\r\n                    <ResetPasswordPage />\r\n                </Route>\r\n                <ProtectedRoute path=\"/profile/:category?\" exact={true}>\r\n                    <ProfilePage />\r\n                </ProtectedRoute>\r\n                <Route path=\"/ingredients/:id\" exact={true}>\r\n                    <IngredientPage />\r\n                </Route>\r\n                <Route path=\"/feed\" exact={true}>\r\n                    <OrdersFeed />\r\n                </Route>\r\n                <Route path={['/feed/:id', `/profile/orders/:id`]} exact={true}>\r\n                    <OrderPage />\r\n                </Route>\r\n                <Route path=\"/\" exact={true}>\r\n                    <Main />\r\n                </Route>\r\n                <Route>\r\n                    <NotFound404 />\r\n                </Route>\r\n            </Switch>\r\n            {background && <Route path=\"/ingredients/:id\">\r\n                <CurrentIngredientDetails />\r\n            </Route>}\r\n            {background && <Route path={['/feed/:id', `/profile/orders/:id`]}>\r\n                <CurrentOpenedOrderDetails />\r\n            </Route>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SwitchWrapper;","import React, { FC } from 'react';\r\nimport AppHeader from '../app-header/app-header';\r\nimport ModalOverlay from '../modal-overlay/modal-overlay';\r\nimport OrderDetails from '../order-details/order-details';\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { SHOW_ORDER_MODAL } from '../../services/actions';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { getIngredients, getIngredientsWhenYandexAFK } from '../../services/actions';\r\nimport { getUser, SHOW_MESSAGE } from '../../services/actions/auth';\r\nimport CommonMessage from '../common-message/common-message';\r\nimport SwitchWrapper from '../switch-wrapper/switch-wrapper';\r\n\r\n\r\nconst App: FC<{}> = () => {\r\n\r\n  const showOrderModal = useSelector(state => state.ingredients.showOrderModal);\r\n  const showMessage = useSelector(state => state.auth.showMessage);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const closeOrderHandler = React.useCallback(() => {\r\n    dispatch({\r\n      type: SHOW_ORDER_MODAL,\r\n      order: null\r\n    })\r\n  }, [dispatch]);\r\n\r\n  const closeCommonMessageHandler = React.useCallback(() => {\r\n    dispatch({\r\n      type: SHOW_MESSAGE\r\n    })\r\n  }, [dispatch]);\r\n\r\n  const currentOrderModal = React.useMemo(() => {\r\n    return <ModalOverlay children={<OrderDetails />} closeHandler={closeOrderHandler} />\r\n  }, [closeOrderHandler]);\r\n\r\n  const currentCommonMessage = React.useMemo(() => {\r\n    return <ModalOverlay children={<CommonMessage />} closeHandler={closeCommonMessageHandler} />\r\n  }, [closeCommonMessageHandler]);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getIngredients());\r\n    dispatch(getUser());\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <AppHeader />\r\n      <SwitchWrapper />\r\n      {showOrderModal && currentOrderModal}\r\n      {showMessage && currentCommonMessage}\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    GET_INGREDIENTS_REQUEST,\r\n    GET_INGREDIENTS_SUCCESS,\r\n    GET_INGREDIENTS_FAILED,\r\n    ADD_COMPONENT,\r\n    REMOVE_COMPONENT,\r\n    SHOW_ORDER_MODAL,\r\n    CREATE_ORDER_REQUEST,\r\n    CREATE_ORDER_SUCCESS,\r\n    CREATE_ORDER_FAILED,\r\n    CLEAN_CONSTRUCTOR,\r\n    UPDATE_OPTIONAL,\r\n    UPDATE_CURRENT_TAB,\r\n    GET_ORDER_REQUEST,\r\n    GET_ORDER_SUCCESS,\r\n    GET_ORDER_FAILED,\r\n    TIngredientsActions\r\n} from '../actions';\r\nimport { TCreatedOrder, TIngredient, TOrder, TTab } from '../types/data';\r\n\r\ntype TIngredientsState = {\r\n    tabs: Array<TTab>,\r\n    currentTab?: TTab,\r\n    ingredients: Array<TIngredient>,\r\n    ingredientsRequest: boolean,\r\n    ingredientsFailed: boolean,\r\n    burgerComponents: {\r\n        bun?: TIngredient,\r\n        optional: Array<TIngredient>\r\n    },\r\n    orderRequest: boolean,\r\n    orderFailed: boolean,\r\n    orderFailedMessage?: string,\r\n    currentOrder?: TCreatedOrder,\r\n    orderNumber?: number,\r\n    showOrderModal: boolean,\r\n    openedOrder: {\r\n        openOrderRequest: boolean,\r\n        openOrderFailed: boolean,\r\n        openOrderFailedMessage?: string,\r\n        order?: TOrder\r\n    }\r\n}\r\n\r\nexport const initialState: TIngredientsState = {\r\n\r\n    tabs: [\r\n        {\r\n            id: 'bun',\r\n            title: 'Булки',\r\n            ratio: 0\r\n        },\r\n        {\r\n            id: 'sauce',\r\n            title: 'Соусы',\r\n            ratio: 0\r\n        },\r\n        {\r\n            id: 'main',\r\n            title: 'Начинки',\r\n            ratio: 0\r\n        }\r\n    ],\r\n    currentTab: undefined,\r\n\r\n    ingredients: [],\r\n    ingredientsRequest: false,\r\n    ingredientsFailed: false,\r\n\r\n    burgerComponents: {\r\n        bun: undefined,\r\n        optional: []\r\n    },\r\n\r\n    orderRequest: false,\r\n    orderFailed: false,\r\n    orderFailedMessage: \"\",\r\n\r\n    currentOrder: undefined,\r\n    orderNumber: undefined,\r\n    showOrderModal: false,\r\n\r\n    openedOrder: {\r\n        openOrderRequest: false,\r\n        openOrderFailed: false,\r\n        openOrderFailedMessage: \"\",\r\n        order: undefined\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const ingredientsReducer = (state = initialState, action: TIngredientsActions): TIngredientsState => {\r\n    switch (action.type) {\r\n        case GET_INGREDIENTS_REQUEST:\r\n            return {\r\n                ...state,\r\n                ingredientsRequest: true,\r\n                ingredientsFailed: false\r\n            }\r\n        case GET_INGREDIENTS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                ingredientsRequest: false,\r\n                ingredients: action.items\r\n            }\r\n        }\r\n        case GET_INGREDIENTS_FAILED:\r\n            return {\r\n                ...state,\r\n                ingredientsRequest: false,\r\n                ingredientsFailed: true,\r\n            }\r\n        case ADD_COMPONENT: {\r\n            if (action.item.type === 'bun') {\r\n                return {\r\n                    ...state,\r\n                    ingredients: state.ingredients.map(item => item._id === action.item._id ? { ...item, qty: 2 } :\r\n                        (state.burgerComponents.bun && item._id === state.burgerComponents.bun._id) ? { ...item, qty: 0 } : item),\r\n                    burgerComponents: {\r\n                        ...state.burgerComponents,\r\n                        bun: action.item\r\n                    }\r\n                }\r\n            } else {\r\n                const currentItem = state.ingredients.find(({ _id }) => _id === action.item._id);\r\n                if (currentItem?.qty)\r\n                    return {\r\n                        ...state,\r\n                        ingredients: state.ingredients.map(item => item._id === action.item._id ? { ...item, qty: item.qty ? ++item.qty : 1 } : item),\r\n                        burgerComponents: {\r\n                            ...state.burgerComponents,\r\n                            optional: [...state.burgerComponents.optional, { ...action.item, id: action.item._id + state.burgerComponents.optional.length }]\r\n                        }\r\n                    }\r\n                else\r\n                    return {\r\n                        ...state,\r\n                        ingredients: state.ingredients.map(item => item._id === action.item._id ? { ...item, qty: 1 } : item),\r\n                        burgerComponents: {\r\n                            ...state.burgerComponents,\r\n                            optional: [...state.burgerComponents.optional, { ...action.item, id: action.item._id + state.burgerComponents.optional.length }]\r\n                        }\r\n                    }\r\n            }\r\n        }\r\n        case REMOVE_COMPONENT: {\r\n            if (action.item.type === 'bun') {\r\n                return {\r\n                    ...state,\r\n                    ingredients: state.ingredients.map(item => item._id === action.item._id ? { ...item, qty: 0 } : item),\r\n                    burgerComponents: {\r\n                        ...state.burgerComponents,\r\n                        bun: undefined\r\n                    }\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    ingredients: state.ingredients.map(item => item._id === action.item._id ? { ...item, qty: item.qty ? --item.qty : 0 } : item),\r\n                    burgerComponents: {\r\n                        ...state.burgerComponents,\r\n                        optional: state.burgerComponents.optional\r\n                            .filter((item, index) => index !== action.index)\r\n                            .map((item, index) => ({ ...item, id: item._id + index }))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case SHOW_ORDER_MODAL:\r\n            return {\r\n                ...state,\r\n                showOrderModal: !state.showOrderModal\r\n            }\r\n        case CLEAN_CONSTRUCTOR:\r\n            return {\r\n                ...state,\r\n                burgerComponents: initialState.burgerComponents,\r\n                ingredients: state.ingredients.map(item => ({ ...item, qty: 0 }))\r\n            }\r\n        case CREATE_ORDER_REQUEST:\r\n            return {\r\n                ...state,\r\n                orderRequest: true,\r\n                orderFailed: false,\r\n                currentOrder: undefined,\r\n                orderNumber: undefined,\r\n                orderFailedMessage: undefined\r\n            }\r\n        case CREATE_ORDER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orderRequest: false,\r\n                currentOrder: action.order,\r\n                orderNumber: action.order ? action.order.order.number : undefined\r\n            }\r\n        case CREATE_ORDER_FAILED:\r\n            return {\r\n                ...state,\r\n                orderRequest: false,\r\n                orderFailed: true,\r\n                orderFailedMessage: action.message\r\n            }\r\n        case UPDATE_OPTIONAL:\r\n            return {\r\n                ...state,\r\n                burgerComponents: {\r\n                    ...state.burgerComponents,\r\n                    optional: action.optional\r\n                }\r\n            }\r\n        case UPDATE_CURRENT_TAB:\r\n            return {\r\n                ...state,\r\n                tabs: state.tabs.map(tab => tab.id === action.id ? { ...tab, ratio: action.ratio } : tab)\r\n            }\r\n        case GET_ORDER_REQUEST:\r\n            return {\r\n                ...state,\r\n                openedOrder: {\r\n                    openOrderRequest: true,\r\n                    openOrderFailed: false,\r\n                    openOrderFailedMessage: \"\",\r\n                    order: undefined\r\n                }\r\n            }\r\n        case GET_ORDER_FAILED:\r\n            return {\r\n                ...state,\r\n                openedOrder: {\r\n                    ...state.openedOrder,\r\n                    openOrderRequest: false,\r\n                    openOrderFailed: true,\r\n                    openOrderFailedMessage: action.message\r\n                }\r\n            }\r\n        case GET_ORDER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                openedOrder: {\r\n                    ...state.openedOrder,\r\n                    openOrderRequest: false,\r\n                    openOrderFailed: false,\r\n                    order: action.order\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    SET_USER,\r\n    SET_CHANGING_PASSWORD,\r\n    USER_REQUIRED,\r\n    USER_LOADED,\r\n    SHOW_MESSAGE,\r\n    SET_MESSAGE,\r\n    TAuthActions\r\n} from '../actions/auth';\r\nimport { TUser } from '../types/data';\r\n\r\nexport type TAuthState = {\r\n    user?: TUser,\r\n    changingPassword: boolean,\r\n    userLoaded: boolean,\r\n    showMessage: boolean,\r\n    authMessage: string\r\n}\r\n\r\nexport const initialState: TAuthState = {\r\n    user: undefined,\r\n    changingPassword: false,\r\n    userLoaded: false,\r\n    showMessage: false,\r\n    authMessage: \"\"\r\n}\r\n\r\nexport const authReducer = (state = initialState, action: TAuthActions): TAuthState => {\r\n    switch (action.type) {\r\n        case SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        case SET_CHANGING_PASSWORD:\r\n            return {\r\n                ...state,\r\n                changingPassword: !state.changingPassword\r\n            }\r\n        case USER_REQUIRED:\r\n            return {\r\n                ...state,\r\n                userLoaded: false\r\n            }\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                userLoaded: true\r\n            }\r\n        case SHOW_MESSAGE:\r\n            return {\r\n                ...state,\r\n                showMessage: !state.showMessage,\r\n                authMessage: action.message\r\n            }\r\n        case SET_MESSAGE:\r\n            return {\r\n                ...state,\r\n                authMessage: action.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { TWSActions } from '../actions/wsActions';\r\nimport {\r\n  WS_COMMON_ORDERS_CONNECTION_START,\r\n  WS_USER_ORDERS_CONNECTION_START,\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_CLOSED,\r\n  WS_GET_COMMON_ORDERS,\r\n  WS_GET_USER_ORDERS\r\n} from '../actions/wsActions';\r\nimport { TOrder, TWsOrdersResponse } from '../types/data';\r\n\r\ntype TWSOrdersState = {\r\n  wsConnected: boolean,\r\n  code: string,\r\n  error: string,\r\n  commonOrders: {\r\n    orders: Array<TOrder>,\r\n    statistics: {\r\n      total: number,\r\n      totalToday: number,\r\n      readyOrders: Array<string>,\r\n      inProgressOrders: Array<string>\r\n    }\r\n  },\r\n  userOrders?: TWsOrdersResponse\r\n}\r\n\r\nexport const initialState: TWSOrdersState = {\r\n  wsConnected: false,\r\n  code: \"\",\r\n  error: \"\",\r\n  commonOrders: {\r\n    orders: [],\r\n    statistics: {\r\n      total: 0,\r\n      totalToday: 0,\r\n      readyOrders: [],\r\n      inProgressOrders: []\r\n    }\r\n  },\r\n  userOrders: undefined\r\n}\r\n\r\nexport const wsReducer = (state = initialState, action: TWSActions): TWSOrdersState => {\r\n  switch (action.type) {\r\n    case WS_COMMON_ORDERS_CONNECTION_START:\r\n      return initialState;\r\n    case WS_USER_ORDERS_CONNECTION_START:\r\n      return initialState;\r\n    case WS_CONNECTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        wsConnected: true,\r\n        code: \"\",\r\n        error: \"\"\r\n      };\r\n\r\n    case WS_CONNECTION_ERROR:\r\n      return {\r\n        ...state,\r\n        wsConnected: false,\r\n        error: action.error\r\n      };\r\n\r\n    case WS_CONNECTION_CLOSED:\r\n      return {\r\n        ...state,\r\n        wsConnected: false,\r\n        code: action.code\r\n      };\r\n\r\n    case WS_GET_COMMON_ORDERS:\r\n      return {\r\n        ...state,\r\n        commonOrders: {\r\n          orders: action.payload.orders,\r\n          statistics: {\r\n            total: action.payload.total,\r\n            totalToday: action.payload.totalToday,\r\n            readyOrders: action.payload.orders\r\n              .filter(item => item.status && item.status === 'done')\r\n              .map(item => item.number),\r\n            inProgressOrders: action.payload.orders\r\n              .filter(item => item.status && item.status !== 'done')\r\n              .map(item => item.number)\r\n          }\r\n        }\r\n      };\r\n    case WS_GET_USER_ORDERS:\r\n      return {\r\n        ...state,\r\n        userOrders: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import { combineReducers } from 'redux';\r\nimport {ingredientsReducer} from './ingredients';\r\nimport { authReducer } from './auth';\r\nimport {wsReducer} from './wsReducer';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ingredients: ingredientsReducer,\r\n    auth: authReducer,\r\n    ws: wsReducer \r\n})","import { getCookie } from '../../utils/cookie-utils';\r\nimport testData from '../../utils/orders-feed-test-data';\r\nimport { Dispatch, Middleware, MiddlewareAPI } from 'redux';\r\nimport { TWSActions, WS_COMMON_ORDERS_CONNECTION_START, WS_CONNECTION_CLOSE, WS_CONNECTION_CLOSED, WS_CONNECTION_ERROR, WS_CONNECTION_SUCCESS, WS_GET_COMMON_ORDERS, WS_GET_USER_ORDERS, WS_USER_ORDERS_CONNECTION_START } from '../actions/wsActions';\r\n\r\n\r\ntype TActions = {\r\n  wsInit: typeof WS_COMMON_ORDERS_CONNECTION_START | typeof WS_USER_ORDERS_CONNECTION_START,\r\n  wsOpened: typeof WS_CONNECTION_SUCCESS\r\n  wsClose: typeof WS_CONNECTION_CLOSE\r\n  wsClosed: typeof WS_CONNECTION_CLOSED\r\n  wsError: typeof WS_CONNECTION_ERROR\r\n  wsMessage: typeof WS_GET_COMMON_ORDERS | typeof WS_GET_USER_ORDERS\r\n}\r\n\r\n\r\nexport default function socketMiddleware(wsUrl: string, wsActions: TActions, auth?: boolean): Middleware {\r\n  return (store: MiddlewareAPI) => {\r\n    let socket: WebSocket;\r\n\r\n    return (next: Dispatch) => (action: TWSActions) => {\r\n      const { dispatch } = store;\r\n      const { type } = action;\r\n      const { wsInit,\r\n        wsOpened,\r\n        wsClose,\r\n        wsClosed,\r\n        wsError,\r\n        wsMessage\r\n      } = wsActions;\r\n      //const { user } = getState().user;\r\n      if (socket && type === wsClose) {\r\n        socket.close();\r\n      }\r\n      if (type === wsInit) {\r\n        if (auth) {\r\n          wsUrl += `?token=${getCookie('token')}`;\r\n        }\r\n        socket = new WebSocket(wsUrl);\r\n      }\r\n      if (socket) {\r\n\r\n        socket.onopen = event => {\r\n          dispatch({ type: wsOpened });\r\n        };\r\n\r\n        socket.onerror = (event) => {\r\n          dispatch({ type: wsError });\r\n        };\r\n\r\n        socket.onmessage = event => {\r\n          const { data } = event;\r\n          const parsedData = JSON.parse(data);\r\n          const { success, ...restParsedData } = parsedData;\r\n          if (restParsedData && restParsedData.message) {\r\n            dispatch({ type: wsError, error: restParsedData.message });\r\n          } else {\r\n            dispatch({ type: wsMessage, payload: restParsedData });\r\n            //dispatch({ type: wsMessage, payload: testData })\r\n          }\r\n\r\n\r\n        };\r\n\r\n        socket.onclose = event => {\r\n          if (!event.wasClean) {\r\n            dispatch({ type: wsClosed, code: { code: event.code } });\r\n          }\r\n        };\r\n      }\r\n\r\n      next(action);\r\n    };\r\n  };\r\n};","import { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from './reducers';\r\nimport { compose } from 'redux';\r\nimport * as actions from './actions/wsActions';\r\nimport { wsUrl } from '../utils/constants';\r\nimport socketMiddleware from './middlewares/socketMiddleware';\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\n\r\nexport const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n//websocket\r\nconst wsActions = {\r\n    wsOpened: actions.WS_CONNECTION_SUCCESS,\r\n    wsClose: actions.WS_CONNECTION_CLOSE,\r\n    wsClosed: actions.WS_CONNECTION_CLOSED,\r\n    wsError: actions.WS_CONNECTION_ERROR,\r\n}\r\nconst commonOrdersWsActions = {\r\n    ...wsActions,\r\n    wsInit: actions.WS_COMMON_ORDERS_CONNECTION_START,\r\n    wsMessage: actions.WS_GET_COMMON_ORDERS\r\n}\r\nconst userOrdersWsActions = {\r\n    ...wsActions,\r\n    wsInit: actions.WS_USER_ORDERS_CONNECTION_START,\r\n    wsMessage: actions.WS_GET_USER_ORDERS\r\n}\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(\r\n    thunk,\r\n    socketMiddleware(wsUrl + '/all', commonOrdersWsActions),\r\n    socketMiddleware(wsUrl, userOrdersWsActions, true)\r\n));\r\n\r\nexport const store = createStore(rootReducer, enhancer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/app/app';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport {store} from './services/store';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"readyOrders\":\"orders-statistic_readyOrders__2g9zO\",\"inProgressOrders\":\"orders-statistic_inProgressOrders__3nU0F\",\"total\":\"orders-statistic_total__1Ue65\",\"totalToday\":\"orders-statistic_totalToday__23ep9\",\"statisticsGrid\":\"orders-statistic_statisticsGrid__3fpcZ\",\"ordersList\":\"orders-statistic_ordersList__3svm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"constructor-el-wrapper_wrapper__2pL5h\",\"drag\":\"constructor-el-wrapper_drag__GX3CP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"order-ingredients_header__3uNju\",\"footer\":\"order-ingredients_footer__3zrA_\",\"imgContainer\":\"order-ingredients_imgContainer__xidbD\",\"imgsList\":\"order-ingredients_imgsList__2Kfsd\",\"rest\":\"order-ingredients_rest__1wliU\",\"notLast\":\"order-ingredients_notLast__1pFo4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"app-header_nav__2zKST\",\"navItem\":\"app-header_navItem__9T8Ec\",\"navContainer\":\"app-header_navContainer__3zxjL\",\"logo\":\"app-header_logo__28b2o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"modal-content_wrap__1IGUE\",\"modal\":\"modal-content_modal__2xTEM\",\"modalHead\":\"modal-content_modalHead__3CyG8\",\"modalHeadWithClose\":\"modal-content_modalHeadWithClose__2JPE3\",\"modalHeadTitle\":\"modal-content_modalHeadTitle__2kCvL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"login_formContainer__phia3\",\"main\":\"login_main__21YT8\",\"navColumn\":\"login_navColumn__21t78\",\"contentSection\":\"login_contentSection__2Yx4t\",\"navContainer\":\"login_navContainer__2Pqh6\",\"autoFit\":\"login_autoFit__1l944\",\"form\":\"login_form__36_Ux\",\"buttomButton\":\"login_buttomButton__38610\",\"link\":\"login_link__3CFIN\",\"unselected\":\"login_unselected__2yHhw\",\"center\":\"login_center__1SJqQ\",\"pointer\":\"login_pointer__3tGBw\",\"title\":\"login_title__yI7bJ\",\"ordersStatistics\":\"login_ordersStatistics__3uFeB\",\"ordersCards\":\"login_ordersCards__UE9IT\",\"ordersFeedSection\":\"login_ordersFeedSection__3ohVY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"general\":\"ingredients-list-item_general__2_OBV\",\"info\":\"ingredients-list-item_info__1cMqW\",\"cost\":\"ingredients-list-item_cost__37V7q\",\"preventPointerEvent\":\"ingredients-list-item_preventPointerEvent__2td4t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"nav-item_link__1zWzg\",\"unselected\":\"nav-item_unselected__URhlD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"profile-form_buttonContainer__2AQLw\",\"form\":\"profile-form_form__1ymiY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"order-card_mainContainer__21wPW\",\"header\":\"order-card_header__9bpHE\",\"footer\":\"order-card_footer__3wEVj\",\"imgContainer\":\"order-card_imgContainer__27GBw\",\"imgsList\":\"order-card_imgsList__P-imQ\",\"rest\":\"order-card_rest__2vIru\",\"notLast\":\"order-card_notLast__UDVwO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"burger-constructor_section__2_YMY\",\"onHover\":\"burger-constructor_onHover__1L5Bk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal_overlay__3rUFP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ordersList\":\"orders-list_ordersList__Bk-f8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"composition\":\"ingredient-details_composition__2dLYk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__3c_A-\"};"],"sourceRoot":""}